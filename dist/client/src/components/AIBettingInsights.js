import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { useQuery } from "@tanstack/react-query";
import { Brain, TrendingUp, Target, Zap, Star, AlertTriangle, CheckCircle } from "lucide-react";
export default function AIBettingInsights() {
    const [activeTab, setActiveTab] = useState('insights');
    const { data: aiInsights = [] } = useQuery({
        queryKey: ["/api/ai/insights"],
    });
    const { data: predictions = [] } = useQuery({
        queryKey: ["/api/ai/predictions"],
    });
    const { data: personalRecommendations = [] } = useQuery({
        queryKey: ["/api/ai/recommendations"],
    });
    const getConfidenceColor = (confidence) => {
        if (confidence >= 80)
            return 'text-winnex-green';
        if (confidence >= 60)
            return 'text-winnex-orange';
        return 'text-red-400';
    };
    const getInsightIcon = (type) => {
        switch (type) {
            case 'prediction': return _jsx(Brain, { className: "text-winnex-blue", size: 20 });
            case 'value_bet': return _jsx(Star, { className: "text-winnex-green", size: 20 });
            case 'risk_alert': return _jsx(AlertTriangle, { className: "text-red-400", size: 20 });
            case 'trend_analysis': return _jsx(TrendingUp, { className: "text-winnex-purple", size: 20 });
            default: return _jsx(Target, { className: "text-white", size: 20 });
        }
    };
    const getRiskColor = (risk) => {
        switch (risk) {
            case 'low': return 'text-winnex-green';
            case 'medium': return 'text-winnex-orange';
            case 'high': return 'text-red-400';
            default: return 'text-white';
        }
    };
    return (_jsxs("div", { className: "space-y-6", children: [_jsx("div", { className: "card-modern p-6 gradient-accent", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Brain, { className: "text-white", size: 32 }), _jsxs("div", { children: [_jsx("h2", { className: "text-2xl font-bold text-white", children: "AI Betting Intelligence" }), _jsx("p", { className: "text-white/80", children: "Machine learning-powered insights and predictions" })] })] }), _jsx("div", { className: "glass rounded-2xl p-4", children: _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "text-2xl font-bold text-white", children: "94.2%" }), _jsx("div", { className: "text-white/70 text-sm", children: "AI Accuracy" })] }) })] }) }), _jsx("div", { className: "glass rounded-xl p-1 flex", children: ['insights', 'predictions', 'recommendations'].map((tab) => (_jsx("button", { onClick: () => setActiveTab(tab), className: `flex-1 py-3 px-4 rounded-lg font-medium transition-all capitalize ${activeTab === tab ? 'bg-winnex-green text-black' : 'text-white/70 hover:text-white'}`, children: tab }, tab))) }), activeTab === 'insights' && (_jsx("div", { className: "space-y-4", children: aiInsights.length === 0 ? (_jsxs("div", { className: "card-modern p-12 text-center", children: [_jsx(Brain, { className: "mx-auto mb-4 text-white/40", size: 48 }), _jsx("h3", { className: "text-xl font-bold mb-2", children: "AI Analysis in Progress" }), _jsx("p", { className: "text-white/60", children: "Our machine learning models are analyzing current matches and market data" })] })) : (aiInsights.map((insight) => (_jsxs("div", { className: "card-modern p-6", children: [_jsxs("div", { className: "flex items-start justify-between mb-4", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [getInsightIcon(insight.type), _jsxs("div", { children: [_jsx("h3", { className: "font-bold text-lg", children: insight.title }), _jsxs("div", { className: "flex items-center space-x-3 mt-1", children: [_jsxs("span", { className: `text-sm font-medium ${getConfidenceColor(insight.confidence)}`, children: [insight.confidence, "% Confidence"] }), _jsxs("span", { className: `text-sm ${getRiskColor(insight.riskLevel)}`, children: [insight.riskLevel.toUpperCase(), " Risk"] })] })] })] }), _jsxs("div", { className: "text-right", children: [_jsx("div", { className: "text-lg font-bold text-winnex-green", children: insight.odds.toFixed(2) }), _jsx("div", { className: "text-sm text-white/60", children: "Odds" })] })] }), _jsx("p", { className: "text-white/80 mb-4", children: insight.description }), _jsxs("div", { className: "glass rounded-lg p-4 mb-4", children: [_jsxs("h4", { className: "font-semibold mb-2 flex items-center", children: [_jsx(Target, { className: "mr-2", size: 16 }), "AI Recommendation"] }), _jsx("p", { className: "text-winnex-green", children: insight.recommendation })] }), insight.reasons.length > 0 && (_jsxs("div", { className: "space-y-2", children: [_jsx("h4", { className: "font-semibold text-sm", children: "Key Factors:" }), _jsx("div", { className: "space-y-1", children: insight.reasons.map((reason, index) => (_jsxs("div", { className: "flex items-center space-x-2 text-sm", children: [_jsx(CheckCircle, { size: 12, className: "text-winnex-green flex-shrink-0" }), _jsx("span", { className: "text-white/80", children: reason })] }, index))) })] })), _jsxs("div", { className: "flex justify-between items-center mt-4 pt-4 border-t border-white/10", children: [_jsxs("div", { className: "text-sm", children: [_jsx("span", { className: "text-white/60", children: "Expected Value: " }), _jsxs("span", { className: `font-bold ${insight.expectedValue > 0 ? 'text-winnex-green' : 'text-red-400'}`, children: [insight.expectedValue > 0 ? '+' : '', insight.expectedValue.toFixed(2), "%"] })] }), _jsx("button", { className: "btn-primary text-sm px-4 py-2", children: "Place Bet" })] })] }, insight.id)))) })), activeTab === 'predictions' && (_jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-6", children: [_jsxs("div", { className: "card-modern p-6", children: [_jsxs("h3", { className: "text-xl font-bold mb-4 flex items-center", children: [_jsx(Zap, { className: "mr-2 text-winnex-blue" }), "Match Outcome Predictions"] }), _jsx("div", { className: "space-y-4", children: [
                                    { match: "Arsenal vs Chelsea", prediction: "Arsenal Win", probability: 68, odds: 2.15 },
                                    { match: "Real Madrid vs Barcelona", prediction: "Over 2.5 Goals", probability: 74, odds: 1.85 },
                                    { match: "Liverpool vs Man City", prediction: "Both Teams to Score", probability: 82, odds: 1.62 },
                                ].map((pred, index) => (_jsxs("div", { className: "glass rounded-lg p-4", children: [_jsxs("div", { className: "flex justify-between items-center mb-2", children: [_jsx("h4", { className: "font-medium", children: pred.match }), _jsx("span", { className: "text-winnex-green font-bold", children: pred.odds })] }), _jsxs("div", { className: "flex justify-between items-center mb-2", children: [_jsx("span", { className: "text-sm text-white/80", children: pred.prediction }), _jsxs("span", { className: `text-sm font-bold ${getConfidenceColor(pred.probability)}`, children: [pred.probability, "%"] })] }), _jsx("div", { className: "w-full bg-white/10 rounded-full h-2", children: _jsx("div", { className: "bg-winnex-green h-2 rounded-full transition-all duration-500", style: { width: `${pred.probability}%` } }) })] }, index))) })] }), _jsxs("div", { className: "card-modern p-6", children: [_jsxs("h3", { className: "text-xl font-bold mb-4 flex items-center", children: [_jsx(TrendingUp, { className: "mr-2 text-winnex-purple" }), "Market Trends"] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "glass rounded-lg p-4", children: [_jsx("h4", { className: "font-medium mb-2", children: "Over/Under Goals Trend" }), _jsx("p", { className: "text-sm text-white/80 mb-3", children: "Premier League matches show 67% rate for Over 2.5 goals in last 10 games" }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { children: "Confidence:" }), _jsx("span", { className: "text-winnex-green font-bold", children: "High" })] })] }), _jsxs("div", { className: "glass rounded-lg p-4", children: [_jsx("h4", { className: "font-medium mb-2", children: "Home Team Advantage" }), _jsx("p", { className: "text-sm text-white/80 mb-3", children: "Home teams winning 58% more frequently this season" }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { children: "Impact:" }), _jsx("span", { className: "text-winnex-orange font-bold", children: "Medium" })] })] }), _jsxs("div", { className: "glass rounded-lg p-4", children: [_jsx("h4", { className: "font-medium mb-2", children: "Value Betting Opportunities" }), _jsx("p", { className: "text-sm text-white/80 mb-3", children: "14 value bets identified with positive expected value" }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { children: "Avg. EV:" }), _jsx("span", { className: "text-winnex-green font-bold", children: "+12.3%" })] })] })] })] })] })), activeTab === 'recommendations' && (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "card-modern p-6 mb-6", children: [_jsx("h3", { className: "text-xl font-bold mb-4", children: "Personalized for Your Betting Style" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsxs("div", { className: "text-center", children: [_jsx("div", { className: "text-2xl font-bold text-winnex-green", children: "72%" }), _jsx("div", { className: "text-sm text-white/60", children: "Your Win Rate" })] }), _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "text-2xl font-bold text-winnex-blue", children: "+18.5%" }), _jsx("div", { className: "text-sm text-white/60", children: "Average ROI" })] }), _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "text-2xl font-bold text-winnex-orange", children: "Football" }), _jsx("div", { className: "text-sm text-white/60", children: "Best Sport" })] })] })] }), personalRecommendations.map((rec, index) => (_jsxs("div", { className: "card-modern p-6", children: [_jsxs("div", { className: "flex justify-between items-start mb-4", children: [_jsxs("div", { children: [_jsx("h3", { className: "font-bold text-lg", children: rec.match }), _jsx("p", { className: "text-winnex-green font-medium", children: rec.recommendation })] }), _jsxs("div", { className: "text-right", children: [_jsxs("div", { className: `text-lg font-bold ${getConfidenceColor(rec.confidence)}`, children: [rec.confidence, "%"] }), _jsx("div", { className: "text-sm text-white/60", children: "Match" })] })] }), _jsx("p", { className: "text-white/80 mb-4", children: rec.reasoning }), _jsxs("div", { className: "grid grid-cols-2 md:grid-cols-4 gap-4 mb-4", children: [_jsxs("div", { className: "text-center", children: [_jsxs("div", { className: "text-lg font-bold text-white", children: ["$", rec.suggestedStake] }), _jsx("div", { className: "text-xs text-white/60", children: "Suggested Stake" })] }), _jsxs("div", { className: "text-center", children: [_jsxs("div", { className: "text-lg font-bold text-winnex-green", children: ["+", rec.expectedROI, "%"] }), _jsx("div", { className: "text-xs text-white/60", children: "Expected ROI" })] }), _jsxs("div", { className: "text-center", children: [_jsxs("div", { className: `text-lg font-bold ${getRiskColor(rec.riskScore < 30 ? 'low' : rec.riskScore < 70 ? 'medium' : 'high')}`, children: [rec.riskScore, "/100"] }), _jsx("div", { className: "text-xs text-white/60", children: "Risk Score" })] }), _jsx("div", { className: "text-center", children: _jsx("button", { className: "btn-primary w-full text-sm", children: "Accept" }) })] })] }, index)))] }))] }));
}
