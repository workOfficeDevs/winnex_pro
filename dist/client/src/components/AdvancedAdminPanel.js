import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Settings, Users, DollarSign, Activity, Clock } from 'lucide-react';
import { apiRequest } from '@/lib/queryClient';
export default function AdvancedAdminPanel() {
    const [selectedTimeframe, setSelectedTimeframe] = useState('24h');
    const [selectedUser, setSelectedUser] = useState('');
    const queryClient = useQueryClient();
    const { data: systemHealth } = useQuery({
        queryKey: ['/api/admin/system-health'],
        queryFn: () => apiRequest('/api/admin/system-health'),
        refetchInterval: 30000, // Refresh every 30 seconds
    });
    const { data: platformMetrics } = useQuery({
        queryKey: ['/api/admin/metrics', selectedTimeframe],
        queryFn: () => apiRequest(`/api/admin/metrics?timeframe=${selectedTimeframe}`),
    });
    const { data: userManagement } = useQuery({
        queryKey: ['/api/admin/user-management'],
        queryFn: () => apiRequest('/api/admin/user-management'),
    });
    const { data: operationalControls } = useQuery({
        queryKey: ['/api/admin/operational-controls'],
        queryFn: () => apiRequest('/api/admin/operational-controls'),
    });
    const { data: auditLogs } = useQuery({
        queryKey: ['/api/admin/audit-logs'],
        queryFn: () => apiRequest('/api/admin/audit-logs'),
    });
    const updateControlsMutation = useMutation({
        mutationFn: (data) => apiRequest('/api/admin/update-controls', 'PUT', data),
        onSuccess: () => {
            queryClient.invalidateQueries({ queryKey: ['/api/admin/operational-controls'] });
        },
    });
    const suspendUserMutation = useMutation({
        mutationFn: (data) => apiRequest('/api/admin/suspend-user', 'POST', data),
        onSuccess: () => {
            queryClient.invalidateQueries({ queryKey: ['/api/admin/user-management'] });
        },
    });
    const voidBetMutation = useMutation({
        mutationFn: (data) => apiRequest('/api/admin/void-bet', 'POST', data),
        onSuccess: () => {
            queryClient.invalidateQueries({ queryKey: ['/api/admin/metrics'] });
        },
    });
    const manualAdjustmentMutation = useMutation({
        mutationFn: (data) => apiRequest('/api/admin/manual-adjustment', 'POST', data),
        onSuccess: () => {
            queryClient.invalidateQueries({ queryKey: ['/api/admin/user-management'] });
        },
    });
    const getHealthStatus = (status) => {
        switch (status) {
            case 'healthy': return { color: 'text-green-400', bg: 'bg-green-500/20' };
            case 'warning': return { color: 'text-yellow-400', bg: 'bg-yellow-500/20' };
            case 'critical': return { color: 'text-red-400', bg: 'bg-red-500/20' };
            default: return { color: 'text-gray-400', bg: 'bg-gray-500/20' };
        }
    };
    const healthStyle = getHealthStatus(systemHealth?.status || 'healthy');
    return (_jsx("div", { className: "min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-6", children: _jsxs("div", { className: "max-w-7xl mx-auto", children: [_jsxs("div", { className: "mb-8", children: [_jsx("h1", { className: "text-4xl font-bold text-white mb-2", children: "Advanced Admin Panel" }), _jsx("p", { className: "text-slate-300", children: "Comprehensive platform management and operational controls" })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-5 gap-6 mb-8", children: [_jsx(Card, { className: `border-white/10 backdrop-blur-xl ${healthStyle.bg}`, children: _jsx(CardContent, { className: "p-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: `text-sm font-medium ${healthStyle.color}`, children: "System Status" }), _jsx("p", { className: `text-2xl font-bold ${healthStyle.color}`, children: systemHealth?.status?.toUpperCase() || 'UNKNOWN' })] }), _jsx(Activity, { className: `h-8 w-8 ${healthStyle.color}` })] }) }) }), _jsx(Card, { className: "bg-black/20 border-blue-500/20 backdrop-blur-xl", children: _jsx(CardContent, { className: "p-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-blue-400 text-sm font-medium", children: "Active Users" }), _jsx("p", { className: "text-2xl font-bold text-white", children: platformMetrics?.activeUsers?.toLocaleString() || 0 })] }), _jsx(Users, { className: "h-8 w-8 text-blue-400" })] }) }) }), _jsx(Card, { className: "bg-black/20 border-green-500/20 backdrop-blur-xl", children: _jsx(CardContent, { className: "p-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-green-400 text-sm font-medium", children: "Revenue (24h)" }), _jsxs("p", { className: "text-2xl font-bold text-white", children: ["$", platformMetrics?.revenue?.toLocaleString() || 0] })] }), _jsx(DollarSign, { className: "h-8 w-8 text-green-400" })] }) }) }), _jsx(Card, { className: "bg-black/20 border-orange-500/20 backdrop-blur-xl", children: _jsx(CardContent, { className: "p-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-orange-400 text-sm font-medium", children: "CPU Usage" }), _jsxs("p", { className: "text-2xl font-bold text-white", children: [systemHealth?.cpuUsage || 0, "%"] })] }), _jsx(Settings, { className: "h-8 w-8 text-orange-400" })] }) }) }), _jsx(Card, { className: "bg-black/20 border-purple-500/20 backdrop-blur-xl", children: _jsx(CardContent, { className: "p-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-purple-400 text-sm font-medium", children: "Uptime" }), _jsxs("p", { className: "text-2xl font-bold text-white", children: [systemHealth?.uptime || 0, "%"] })] }), _jsx(Clock, { className: "h-8 w-8 text-purple-400" })] }) }) })] }), _jsxs(Tabs, { defaultValue: "dashboard", className: "space-y-6", children: [_jsxs(TabsList, { className: "bg-black/20 backdrop-blur-xl border-white/10", children: [_jsx(TabsTrigger, { value: "dashboard", className: "data-[state=active]:bg-green-500/20", children: "Dashboard" }), _jsx(TabsTrigger, { value: "users", className: "data-[state=active]:bg-green-500/20", children: "User Management" }), _jsx(TabsTrigger, { value: "controls", className: "data-[state=active]:bg-green-500/20", children: "Operational Controls" }), _jsx(TabsTrigger, { value: "audit", className: "data-[state=active]:bg-green-500/20", children: "Audit & Logs" }), _jsx(TabsTrigger, { value: "tools", className: "data-[state=active]:bg-green-500/20", children: "Admin Tools" })] }), _jsxs(TabsContent, { value: "dashboard", className: "space-y-6", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("h2", { className: "text-2xl font-bold text-white", children: "Platform Analytics" }), _jsxs(Select, { value: selectedTimeframe, onValueChange: setSelectedTimeframe, children: [_jsx(SelectTrigger, { className: "w-48 bg-slate-800/50 border-slate-600", children: _jsx(SelectValue, {}) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "1h", children: "Last Hour" }), _jsx(SelectItem, { value: "24h", children: "Last 24 Hours" }), _jsx(SelectItem, { value: "7d", children: "Last 7 Days" }), _jsx(SelectItem, { value: "30d", children: "Last 30 Days" })] })] })] }), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-6", children: [_jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "Platform Performance" }) }), _jsx(CardContent, { className: "space-y-4", children: _jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Total Bets" }), _jsx("p", { className: "text-2xl font-bold text-white", children: platformMetrics?.totalBets?.toLocaleString() || 0 })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Total Volume" }), _jsxs("p", { className: "text-2xl font-bold text-white", children: ["$", platformMetrics?.totalVolume?.toLocaleString() || 0] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Conversion Rate" }), _jsxs("p", { className: "text-2xl font-bold text-green-400", children: [platformMetrics?.conversionRate || 0, "%"] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Retention Rate" }), _jsxs("p", { className: "text-2xl font-bold text-blue-400", children: [platformMetrics?.retentionRate || 0, "%"] })] })] }) })] }), _jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "System Resources" }) }), _jsx(CardContent, { className: "space-y-4", children: _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { children: [_jsxs("div", { className: "flex justify-between text-sm mb-1", children: [_jsx("span", { className: "text-slate-300", children: "Memory Usage" }), _jsxs("span", { className: "text-white", children: [systemHealth?.memoryUsage || 0, "%"] })] }), _jsx(Progress, { value: systemHealth?.memoryUsage || 0, className: "h-2 bg-slate-800" })] }), _jsxs("div", { children: [_jsxs("div", { className: "flex justify-between text-sm mb-1", children: [_jsx("span", { className: "text-slate-300", children: "Disk Usage" }), _jsxs("span", { className: "text-white", children: [systemHealth?.diskUsage || 0, "%"] })] }), _jsx(Progress, { value: systemHealth?.diskUsage || 0, className: "h-2 bg-slate-800" })] }), _jsx("div", { children: _jsxs("div", { className: "flex justify-between text-sm mb-1", children: [_jsx("span", { className: "text-slate-300", children: "Active Connections" }), _jsx("span", { className: "text-white", children: systemHealth?.activeConnections || 0 })] }) }), _jsx("div", { children: _jsxs("div", { className: "flex justify-between text-sm mb-1", children: [_jsx("span", { className: "text-slate-300", children: "Response Time" }), _jsxs("span", { className: "text-white", children: [systemHealth?.responseTime || 0, "ms"] })] }) })] }) })] })] }), _jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "Financial Overview" }) }), _jsx(CardContent, { children: _jsxs("div", { className: "grid grid-cols-2 md:grid-cols-4 gap-6", children: [_jsxs("div", { className: "text-center", children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Revenue" }), _jsxs("p", { className: "text-3xl font-bold text-green-400", children: ["$", platformMetrics?.revenue?.toLocaleString() || 0] })] }), _jsxs("div", { className: "text-center", children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Profit" }), _jsxs("p", { className: "text-3xl font-bold text-blue-400", children: ["$", platformMetrics?.profit?.toLocaleString() || 0] })] }), _jsxs("div", { className: "text-center", children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Daily Active Users" }), _jsx("p", { className: "text-3xl font-bold text-purple-400", children: platformMetrics?.dailyActiveUsers?.toLocaleString() || 0 })] }), _jsxs("div", { className: "text-center", children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Monthly Active Users" }), _jsx("p", { className: "text-3xl font-bold text-orange-400", children: platformMetrics?.monthlyActiveUsers?.toLocaleString() || 0 })] })] }) })] })] }), _jsxs(TabsContent, { value: "users", className: "space-y-6", children: [_jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-3 gap-6", children: [_jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "Recent Registrations" }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-3", children: userManagement?.recentRegistrations?.map((user) => (_jsxs("div", { className: "p-3 bg-slate-800/30 rounded-lg", children: [_jsxs("div", { className: "flex justify-between items-start mb-2", children: [_jsxs("div", { children: [_jsxs("p", { className: "text-white font-medium", children: [user.firstName, " ", user.lastName] }), _jsx("p", { className: "text-slate-400 text-sm", children: user.email })] }), _jsx(Badge, { className: "bg-green-500/20 text-green-400", children: user.status })] }), _jsxs("div", { className: "grid grid-cols-2 gap-2 text-xs", children: [_jsxs("div", { children: [_jsx("p", { className: "text-slate-400", children: "Deposits" }), _jsxs("p", { className: "text-white", children: ["$", user.totalDeposits] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400", children: "Bets" }), _jsx("p", { className: "text-white", children: user.totalBets })] })] })] }, user.id))) }) })] }), _jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "VIP Users" }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-3", children: userManagement?.vipUsers?.map((user) => (_jsxs("div", { className: "p-3 bg-slate-800/30 rounded-lg", children: [_jsxs("div", { className: "flex justify-between items-start mb-2", children: [_jsxs("div", { children: [_jsx("p", { className: "text-white font-medium", children: user.email }), _jsxs("p", { className: "text-slate-400 text-sm", children: ["Tier: ", user.tier] })] }), _jsx(Badge, { className: "bg-purple-500/20 text-purple-400", children: "VIP" })] }), _jsxs("div", { className: "grid grid-cols-2 gap-2 text-xs", children: [_jsxs("div", { children: [_jsx("p", { className: "text-slate-400", children: "Volume" }), _jsxs("p", { className: "text-white", children: ["$", user.totalVolume.toLocaleString()] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400", children: "Profitability" }), _jsxs("p", { className: user.profitability >= 0 ? 'text-green-400' : 'text-red-400', children: [user.profitability >= 0 ? '+' : '', "$", user.profitability.toLocaleString()] })] })] })] }, user.id))) }) })] }), _jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "Suspended Users" }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-3", children: userManagement?.suspendedUsers?.map((user) => (_jsxs("div", { className: "p-3 bg-slate-800/30 rounded-lg border border-red-500/20", children: [_jsxs("div", { className: "flex justify-between items-start mb-2", children: [_jsxs("div", { children: [_jsx("p", { className: "text-white font-medium", children: user.email }), _jsx("p", { className: "text-slate-400 text-sm", children: user.suspensionReason })] }), _jsx(Badge, { className: "bg-red-500/20 text-red-400", children: "Suspended" })] }), _jsxs("p", { className: "text-xs text-slate-400", children: ["By: ", user.suspendedBy, " \u2022 ", new Date(user.suspendedAt).toLocaleDateString()] })] }, user.id))) }) })] })] }), _jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "User Actions" }) }), _jsx(CardContent, { className: "space-y-4", children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium text-white", children: "Suspend User" }), _jsxs("div", { className: "space-y-3", children: [_jsx(Input, { placeholder: "User ID or Email", value: selectedUser, onChange: (e) => setSelectedUser(e.target.value), className: "bg-slate-800/50 border-slate-600" }), _jsx(Input, { placeholder: "Suspension Reason", className: "bg-slate-800/50 border-slate-600" }), _jsx(Button, { className: "w-full bg-red-500 hover:bg-red-600", onClick: () => suspendUserMutation.mutate({
                                                                            userId: selectedUser,
                                                                            reason: 'Administrative action'
                                                                        }), children: "Suspend User" })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium text-white", children: "Manual Balance Adjustment" }), _jsxs("div", { className: "space-y-3", children: [_jsx(Input, { placeholder: "User ID", className: "bg-slate-800/50 border-slate-600" }), _jsx(Input, { placeholder: "Amount", type: "number", className: "bg-slate-800/50 border-slate-600" }), _jsx(Input, { placeholder: "Reason", className: "bg-slate-800/50 border-slate-600" }), _jsxs("div", { className: "flex space-x-2", children: [_jsx(Button, { className: "flex-1 bg-green-500 hover:bg-green-600", children: "Credit" }), _jsx(Button, { className: "flex-1 bg-red-500 hover:bg-red-600", children: "Debit" })] })] })] })] }) })] })] }), _jsx(TabsContent, { value: "controls", className: "space-y-6", children: _jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "Platform Controls" }) }), _jsx(CardContent, { children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium text-white", children: "System Controls" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsx("span", { className: "text-slate-300", children: "Maintenance Mode" }), _jsx(Button, { size: "sm", variant: operationalControls?.maintenanceMode ? 'destructive' : 'default', onClick: () => updateControlsMutation.mutate({
                                                                                maintenanceMode: !operationalControls?.maintenanceMode
                                                                            }), children: operationalControls?.maintenanceMode ? 'Disable' : 'Enable' })] }), _jsxs("div", { className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsx("span", { className: "text-slate-300", children: "Emergency Mode" }), _jsx(Button, { size: "sm", variant: operationalControls?.emergencyMode ? 'destructive' : 'default', onClick: () => updateControlsMutation.mutate({
                                                                                emergencyMode: !operationalControls?.emergencyMode
                                                                            }), children: operationalControls?.emergencyMode ? 'Disable' : 'Enable' })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium text-white", children: "User Features" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsx("span", { className: "text-slate-300", children: "Registration" }), _jsx(Button, { size: "sm", variant: operationalControls?.registrationEnabled ? 'default' : 'destructive', onClick: () => updateControlsMutation.mutate({
                                                                                registrationEnabled: !operationalControls?.registrationEnabled
                                                                            }), children: operationalControls?.registrationEnabled ? 'Enabled' : 'Disabled' })] }), _jsxs("div", { className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsx("span", { className: "text-slate-300", children: "Betting" }), _jsx(Button, { size: "sm", variant: operationalControls?.bettingEnabled ? 'default' : 'destructive', onClick: () => updateControlsMutation.mutate({
                                                                                bettingEnabled: !operationalControls?.bettingEnabled
                                                                            }), children: operationalControls?.bettingEnabled ? 'Enabled' : 'Disabled' })] }), _jsxs("div", { className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsx("span", { className: "text-slate-300", children: "Live Betting" }), _jsx(Button, { size: "sm", variant: operationalControls?.liveBettingEnabled ? 'default' : 'destructive', onClick: () => updateControlsMutation.mutate({
                                                                                liveBettingEnabled: !operationalControls?.liveBettingEnabled
                                                                            }), children: operationalControls?.liveBettingEnabled ? 'Enabled' : 'Disabled' })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-lg font-medium text-white", children: "Financial Controls" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsx("span", { className: "text-slate-300", children: "Deposits" }), _jsx(Button, { size: "sm", variant: operationalControls?.depositsEnabled ? 'default' : 'destructive', onClick: () => updateControlsMutation.mutate({
                                                                                depositsEnabled: !operationalControls?.depositsEnabled
                                                                            }), children: operationalControls?.depositsEnabled ? 'Enabled' : 'Disabled' })] }), _jsxs("div", { className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsx("span", { className: "text-slate-300", children: "Withdrawals" }), _jsx(Button, { size: "sm", variant: operationalControls?.withdrawalsEnabled ? 'default' : 'destructive', onClick: () => updateControlsMutation.mutate({
                                                                                withdrawalsEnabled: !operationalControls?.withdrawalsEnabled
                                                                            }), children: operationalControls?.withdrawalsEnabled ? 'Enabled' : 'Disabled' })] }), _jsxs("div", { className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsx("span", { className: "text-slate-300", children: "Bonuses" }), _jsx(Button, { size: "sm", variant: operationalControls?.bonusesEnabled ? 'default' : 'destructive', onClick: () => updateControlsMutation.mutate({
                                                                                bonusesEnabled: !operationalControls?.bonusesEnabled
                                                                            }), children: operationalControls?.bonusesEnabled ? 'Enabled' : 'Disabled' })] })] })] })] }) })] }) }), _jsx(TabsContent, { value: "audit", className: "space-y-6", children: _jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "Admin Activity Audit Log" }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: auditLogs?.map((log) => (_jsxs("div", { className: "p-4 bg-slate-800/30 rounded-lg border border-slate-600/30", children: [_jsxs("div", { className: "flex items-center justify-between mb-3", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx("div", { className: `w-3 h-3 rounded-full ${log.severity === 'critical' ? 'bg-red-500' :
                                                                            log.severity === 'high' ? 'bg-orange-500' :
                                                                                log.severity === 'medium' ? 'bg-yellow-500' : 'bg-blue-500'}` }), _jsxs("div", { children: [_jsx("p", { className: "text-white font-medium", children: log.action }), _jsxs("p", { className: "text-slate-400 text-sm", children: ["Admin: ", log.adminEmail, " \u2022 Target: ", log.target] })] })] }), _jsxs("div", { className: "text-right", children: [_jsx(Badge, { className: `${log.severity === 'critical' ? 'bg-red-500/20 text-red-400' :
                                                                            log.severity === 'high' ? 'bg-orange-500/20 text-orange-400' :
                                                                                log.severity === 'medium' ? 'bg-yellow-500/20 text-yellow-400' :
                                                                                    'bg-blue-500/20 text-blue-400'}`, children: log.severity }), _jsx("p", { className: "text-slate-400 text-sm mt-1", children: new Date(log.timestamp).toLocaleString() })] })] }), log.changes && (_jsxs("div", { className: "text-sm", children: [_jsx("p", { className: "text-slate-400 mb-1", children: "Changes:" }), _jsx("pre", { className: "text-slate-300 bg-slate-900/50 p-2 rounded text-xs overflow-x-auto", children: JSON.stringify(log.changes, null, 2) })] }))] }, log.id))) }) })] }) }), _jsx(TabsContent, { value: "tools", className: "space-y-6", children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "Bet Management Tools" }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "space-y-3", children: [_jsx(Input, { placeholder: "Bet ID", className: "bg-slate-800/50 border-slate-600" }), _jsx(Input, { placeholder: "Void Reason", className: "bg-slate-800/50 border-slate-600" }), _jsx(Button, { className: "w-full bg-red-500 hover:bg-red-600", children: "Void Bet" })] }), _jsx("div", { className: "pt-4 border-t border-slate-600", children: _jsx(Button, { className: "w-full bg-blue-500 hover:bg-blue-600", children: "Manual Settlement" }) })] })] }), _jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "System Tools" }) }), _jsxs(CardContent, { className: "space-y-3", children: [_jsx(Button, { className: "w-full bg-purple-500 hover:bg-purple-600", children: "Clear Cache" }), _jsx(Button, { className: "w-full bg-orange-500 hover:bg-orange-600", children: "Restart Services" }), _jsx(Button, { className: "w-full bg-green-500 hover:bg-green-600", children: "Generate Report" }), _jsx(Button, { className: "w-full bg-yellow-500 hover:bg-yellow-600", children: "Database Backup" }), _jsx(Button, { className: "w-full bg-red-500 hover:bg-red-600", children: "Emergency Shutdown" })] })] })] }) })] })] }) }));
}
