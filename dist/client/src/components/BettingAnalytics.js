import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { useQuery } from "@tanstack/react-query";
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LineChart, Line, PieChart, Pie, Cell } from "recharts";
import { TrendingUp, TrendingDown, DollarSign, Target, Award } from "lucide-react";
const COLORS = ['#00ff9d', '#4299e1', '#f56565', '#ed8936', '#9f7aea'];
export default function BettingAnalytics() {
    const [timeFrame, setTimeFrame] = useState('30d');
    const { data: stats } = useQuery({
        queryKey: ["/api/analytics/betting", timeFrame],
    });
    if (!stats) {
        return (_jsx("div", { className: "card-modern p-8 text-center", children: _jsxs("div", { className: "animate-pulse space-y-4", children: [_jsx("div", { className: "h-8 bg-white/10 rounded" }), _jsx("div", { className: "h-32 bg-white/10 rounded" }), _jsx("div", { className: "h-32 bg-white/10 rounded" })] }) }));
    }
    const isProfit = stats.profit >= 0;
    return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("h2", { className: "text-3xl font-bold gradient-accent bg-clip-text text-transparent", children: "Betting Analytics" }), _jsx("div", { className: "flex bg-secondary rounded-xl p-1", children: ['7d', '30d', '90d', '1y'].map((period) => (_jsx("button", { onClick: () => setTimeFrame(period), className: `px-4 py-2 rounded-lg font-medium transition-all ${timeFrame === period ? 'bg-winnex-green text-black' : 'text-white/70 hover:text-white'}`, children: period }, period))) })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6", children: [_jsxs("div", { className: "card-modern p-6", children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx(DollarSign, { className: "text-winnex-green", size: 24 }), _jsx("div", { className: `flex items-center ${isProfit ? 'text-winnex-green' : 'text-red-400'}`, children: isProfit ? _jsx(TrendingUp, { size: 16 }) : _jsx(TrendingDown, { size: 16 }) })] }), _jsxs("div", { className: `text-2xl font-bold ${isProfit ? 'text-winnex-green' : 'text-red-400'}`, children: ["$", Math.abs(stats.profit).toFixed(2)] }), _jsx("div", { className: "text-white/60 text-sm", children: isProfit ? 'Total Profit' : 'Total Loss' })] }), _jsxs("div", { className: "card-modern p-6", children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx(Target, { className: "text-winnex-blue", size: 24 }), _jsx("span", { className: "text-xs bg-winnex-blue/20 text-winnex-blue px-2 py-1 rounded", children: "WIN RATE" })] }), _jsxs("div", { className: "text-2xl font-bold text-winnex-blue", children: [stats.winRate.toFixed(1), "%"] }), _jsxs("div", { className: "text-white/60 text-sm", children: [stats.totalBets, " total bets"] })] }), _jsxs("div", { className: "card-modern p-6", children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx(TrendingUp, { className: "text-winnex-orange", size: 24 }), _jsx("span", { className: "text-xs bg-winnex-orange/20 text-winnex-orange px-2 py-1 rounded", children: "ROI" })] }), _jsxs("div", { className: `text-2xl font-bold ${stats.roi >= 0 ? 'text-winnex-orange' : 'text-red-400'}`, children: [stats.roi >= 0 ? '+' : '', stats.roi.toFixed(1), "%"] }), _jsx("div", { className: "text-white/60 text-sm", children: "Return on Investment" })] }), _jsxs("div", { className: "card-modern p-6", children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx(Award, { className: "text-winnex-purple", size: 24 }), _jsx("span", { className: "text-xs bg-winnex-purple/20 text-winnex-purple px-2 py-1 rounded", children: "STREAK" })] }), _jsx("div", { className: "text-2xl font-bold text-winnex-purple", children: stats.longestWinStreak }), _jsx("div", { className: "text-white/60 text-sm", children: "Longest win streak" })] })] }), _jsxs("div", { className: "card-modern p-6", children: [_jsx("h3", { className: "text-xl font-bold mb-4", children: "Monthly Performance" }), _jsx("div", { className: "h-64", children: _jsx(ResponsiveContainer, { width: "100%", height: "100%", children: _jsxs(LineChart, { data: stats.monthlyData, children: [_jsx(CartesianGrid, { strokeDasharray: "3 3", stroke: "rgba(255,255,255,0.1)" }), _jsx(XAxis, { dataKey: "month", stroke: "rgba(255,255,255,0.6)" }), _jsx(YAxis, { stroke: "rgba(255,255,255,0.6)" }), _jsx(Tooltip, { contentStyle: {
                                            backgroundColor: 'rgba(0,0,0,0.8)',
                                            border: '1px solid rgba(255,255,255,0.1)',
                                            borderRadius: '8px'
                                        } }), _jsx(Line, { type: "monotone", dataKey: "profit", stroke: "#00ff9d", strokeWidth: 2, dot: { fill: '#00ff9d', strokeWidth: 2, r: 4 } })] }) }) })] }), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-6", children: [_jsxs("div", { className: "card-modern p-6", children: [_jsx("h3", { className: "text-xl font-bold mb-4", children: "Sports Performance" }), _jsx("div", { className: "h-64", children: _jsx(ResponsiveContainer, { width: "100%", height: "100%", children: _jsxs(PieChart, { children: [_jsx(Pie, { data: stats.sportBreakdown, cx: "50%", cy: "50%", labelLine: false, label: ({ sport, winRate }) => `${sport} (${winRate.toFixed(1)}%)`, outerRadius: 80, fill: "#8884d8", dataKey: "bets", children: stats.sportBreakdown.map((entry, index) => (_jsx(Cell, { fill: COLORS[index % COLORS.length] }, `cell-${index}`))) }), _jsx(Tooltip, { contentStyle: {
                                                    backgroundColor: 'rgba(0,0,0,0.8)',
                                                    border: '1px solid rgba(255,255,255,0.1)',
                                                    borderRadius: '8px'
                                                } })] }) }) })] }), _jsxs("div", { className: "card-modern p-6", children: [_jsx("h3", { className: "text-xl font-bold mb-4", children: "Monthly Betting Volume" }), _jsx("div", { className: "h-64", children: _jsx(ResponsiveContainer, { width: "100%", height: "100%", children: _jsxs(BarChart, { data: stats.monthlyData, children: [_jsx(CartesianGrid, { strokeDasharray: "3 3", stroke: "rgba(255,255,255,0.1)" }), _jsx(XAxis, { dataKey: "month", stroke: "rgba(255,255,255,0.6)" }), _jsx(YAxis, { stroke: "rgba(255,255,255,0.6)" }), _jsx(Tooltip, { contentStyle: {
                                                    backgroundColor: 'rgba(0,0,0,0.8)',
                                                    border: '1px solid rgba(255,255,255,0.1)',
                                                    borderRadius: '8px'
                                                } }), _jsx(Bar, { dataKey: "bets", fill: "#4299e1", radius: [4, 4, 0, 0] })] }) }) })] })] }), _jsxs("div", { className: "card-modern p-6", children: [_jsx("h3", { className: "text-xl font-bold mb-4", children: "Detailed Statistics" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6", children: [_jsxs("div", { className: "text-center", children: [_jsxs("div", { className: "text-2xl font-bold text-white mb-1", children: ["$", stats.totalStaked.toFixed(2)] }), _jsx("div", { className: "text-white/60 text-sm", children: "Total Staked" })] }), _jsxs("div", { className: "text-center", children: [_jsxs("div", { className: "text-2xl font-bold text-winnex-green mb-1", children: ["$", stats.totalWinnings.toFixed(2)] }), _jsx("div", { className: "text-white/60 text-sm", children: "Total Winnings" })] }), _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "text-2xl font-bold text-winnex-blue mb-1", children: stats.avgOdds.toFixed(2) }), _jsx("div", { className: "text-white/60 text-sm", children: "Average Odds" })] }), _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "text-2xl font-bold text-red-400 mb-1", children: stats.longestLoseStreak }), _jsx("div", { className: "text-white/60 text-sm", children: "Longest Lose Streak" })] })] })] }), _jsxs("div", { className: "card-modern p-6", children: [_jsx("h3", { className: "text-xl font-bold mb-4", children: "Recent Performance" }), _jsx("div", { className: "flex space-x-2 mb-4", children: stats.recentPerformance.slice(-20).map((result, index) => (_jsx("div", { className: `w-4 h-4 rounded-full ${result.result === 'win' ? 'bg-winnex-green' : 'bg-red-400'}`, title: `${result.date}: ${result.result} (${result.profit >= 0 ? '+' : ''}$${result.profit.toFixed(2)})` }, index))) }), _jsx("div", { className: "text-sm text-white/60", children: "Last 20 bets \u2022 Green = Win, Red = Loss" })] })] }));
}
