import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { CheckCircle, XCircle, Clock, AlertTriangle, FileText, Shield } from 'lucide-react';
import { apiRequest } from '@/lib/queryClient';
export default function KYCComplianceCenter() {
    const [selectedUser, setSelectedUser] = useState('');
    const [documentFilter, setDocumentFilter] = useState('all');
    const queryClient = useQueryClient();
    const { data: complianceStats } = useQuery({
        queryKey: ['/api/compliance/stats'],
        queryFn: () => apiRequest('/api/compliance/stats'),
    });
    const { data: kycUsers } = useQuery({
        queryKey: ['/api/compliance/kyc-users'],
        queryFn: () => apiRequest('/api/compliance/kyc-users'),
    });
    const { data: amlAlerts } = useQuery({
        queryKey: ['/api/compliance/aml-alerts'],
        queryFn: () => apiRequest('/api/compliance/aml-alerts'),
    });
    const { data: selectedUserDetails } = useQuery({
        queryKey: ['/api/compliance/user', selectedUser],
        queryFn: () => apiRequest(`/api/compliance/user/${selectedUser}`),
        enabled: !!selectedUser,
    });
    const approveUserMutation = useMutation({
        mutationFn: (data) => apiRequest('/api/compliance/approve-user', 'POST', data),
        onSuccess: () => {
            queryClient.invalidateQueries({ queryKey: ['/api/compliance/kyc-users'] });
            queryClient.invalidateQueries({ queryKey: ['/api/compliance/stats'] });
        },
    });
    const rejectUserMutation = useMutation({
        mutationFn: (data) => apiRequest('/api/compliance/reject-user', 'POST', data),
        onSuccess: () => {
            queryClient.invalidateQueries({ queryKey: ['/api/compliance/kyc-users'] });
        },
    });
    const resolveAlertMutation = useMutation({
        mutationFn: (data) => apiRequest('/api/compliance/resolve-alert', 'POST', data),
        onSuccess: () => {
            queryClient.invalidateQueries({ queryKey: ['/api/compliance/aml-alerts'] });
        },
    });
    const pendingUsers = kycUsers?.filter((user) => user.status === 'pending' || user.status === 'under_review') || [];
    const criticalAlerts = amlAlerts?.filter((alert) => alert.severity === 'critical' && alert.status === 'open') || [];
    const getStatusColor = (status) => {
        switch (status) {
            case 'approved': return 'bg-green-500/20 text-green-400 border-green-500/20';
            case 'rejected': return 'bg-red-500/20 text-red-400 border-red-500/20';
            case 'pending': return 'bg-yellow-500/20 text-yellow-400 border-yellow-500/20';
            case 'under_review': return 'bg-blue-500/20 text-blue-400 border-blue-500/20';
            default: return 'bg-gray-500/20 text-gray-400 border-gray-500/20';
        }
    };
    const getRiskLevelColor = (level) => {
        switch (level) {
            case 'low': return 'bg-green-500/20 text-green-400';
            case 'medium': return 'bg-yellow-500/20 text-yellow-400';
            case 'high': return 'bg-red-500/20 text-red-400';
            default: return 'bg-gray-500/20 text-gray-400';
        }
    };
    return (_jsx("div", { className: "min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-6", children: _jsxs("div", { className: "max-w-7xl mx-auto", children: [_jsxs("div", { className: "mb-8", children: [_jsx("h1", { className: "text-4xl font-bold text-white mb-2", children: "Basic Verification Center" }), _jsx("p", { className: "text-slate-300", children: "Streamlined identity verification for quick account activation" })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-4 gap-6 mb-8", children: [_jsx(Card, { className: "bg-black/20 border-blue-500/20 backdrop-blur-xl", children: _jsx(CardContent, { className: "p-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-blue-400 text-sm font-medium", children: "Pending Reviews" }), _jsx("p", { className: "text-3xl font-bold text-white", children: complianceStats?.pendingReviews || 0 })] }), _jsx(Clock, { className: "h-8 w-8 text-blue-400" })] }) }) }), _jsx(Card, { className: "bg-black/20 border-red-500/20 backdrop-blur-xl", children: _jsx(CardContent, { className: "p-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-red-400 text-sm font-medium", children: "Critical Alerts" }), _jsx("p", { className: "text-3xl font-bold text-white", children: criticalAlerts.length })] }), _jsx(AlertTriangle, { className: "h-8 w-8 text-red-400" })] }) }) }), _jsx(Card, { className: "bg-black/20 border-green-500/20 backdrop-blur-xl", children: _jsx(CardContent, { className: "p-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-green-400 text-sm font-medium", children: "Completed Today" }), _jsx("p", { className: "text-3xl font-bold text-white", children: complianceStats?.completedToday || 0 })] }), _jsx(CheckCircle, { className: "h-8 w-8 text-green-400" })] }) }) }), _jsx(Card, { className: "bg-black/20 border-orange-500/20 backdrop-blur-xl", children: _jsx(CardContent, { className: "p-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-orange-400 text-sm font-medium", children: "High Risk Users" }), _jsx("p", { className: "text-3xl font-bold text-white", children: complianceStats?.highRiskUsers || 0 })] }), _jsx(Shield, { className: "h-8 w-8 text-orange-400" })] }) }) })] }), _jsxs(Tabs, { defaultValue: "reviews", className: "space-y-6", children: [_jsxs(TabsList, { className: "bg-black/20 backdrop-blur-xl border-white/10", children: [_jsx(TabsTrigger, { value: "reviews", className: "data-[state=active]:bg-green-500/20", children: "Quick Verification" }), _jsx(TabsTrigger, { value: "alerts", className: "data-[state=active]:bg-green-500/20", children: "Security Alerts" }), _jsx(TabsTrigger, { value: "monitoring", className: "data-[state=active]:bg-green-500/20", children: "Basic Monitoring" }), _jsx(TabsTrigger, { value: "reports", className: "data-[state=active]:bg-green-500/20", children: "Simple Reports" })] }), _jsx(TabsContent, { value: "reviews", className: "space-y-6", children: _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-3 gap-6", children: [_jsx("div", { className: "lg:col-span-2", children: _jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "Pending KYC Reviews" }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: pendingUsers.map((user) => (_jsxs("div", { className: `p-4 rounded-lg border cursor-pointer transition-all ${selectedUser === user.id
                                                                ? 'bg-green-500/10 border-green-500/30'
                                                                : 'bg-slate-800/30 border-slate-600/30 hover:border-slate-500/50'}`, onClick: () => setSelectedUser(user.id), children: [_jsxs("div", { className: "flex items-center justify-between mb-3", children: [_jsxs("div", { children: [_jsxs("p", { className: "text-white font-medium", children: [user.firstName, " ", user.lastName] }), _jsx("p", { className: "text-slate-400 text-sm", children: user.email })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsxs(Badge, { className: getRiskLevelColor(user.riskLevel), children: [user.riskLevel, " risk"] }), _jsx(Badge, { className: getStatusColor(user.status), children: user.status })] })] }), _jsxs("div", { className: "grid grid-cols-2 gap-4 text-sm", children: [_jsxs("div", { children: [_jsx("p", { className: "text-slate-400", children: "Registration" }), _jsx("p", { className: "text-white", children: new Date(user.registrationDate).toLocaleDateString() })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400", children: "Verification Level" }), _jsx("p", { className: "text-white capitalize", children: user.verificationLevel })] })] }), _jsxs("div", { className: "flex items-center justify-between mt-3", children: [_jsx("div", { className: "flex items-center space-x-2", children: user.documents.map((doc, index) => (_jsxs("div", { className: "flex items-center space-x-1", children: [doc.status === 'approved' ? (_jsx(CheckCircle, { className: "h-4 w-4 text-green-400" })) : doc.status === 'rejected' ? (_jsx(XCircle, { className: "h-4 w-4 text-red-400" })) : (_jsx(Clock, { className: "h-4 w-4 text-yellow-400" })), _jsx("span", { className: "text-xs text-slate-400 capitalize", children: doc.type.replace('_', ' ') })] }, index))) }), _jsx("p", { className: "text-xs text-slate-400", children: user.flags.length > 0 && `${user.flags.length} flags` })] })] }, user.id))) }) })] }) }), _jsx("div", { children: selectedUser && selectedUserDetails && (_jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "User Details" }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Personal Information" }), _jsxs("div", { className: "mt-2 space-y-2", children: [_jsxs("p", { className: "text-white", children: [selectedUserDetails.firstName, " ", selectedUserDetails.lastName] }), _jsx("p", { className: "text-slate-300 text-sm", children: selectedUserDetails.email }), _jsxs("p", { className: "text-slate-300 text-sm", children: ["DOB: ", new Date(selectedUserDetails.dateOfBirth).toLocaleDateString()] }), _jsxs("p", { className: "text-slate-300 text-sm", children: ["Nationality: ", selectedUserDetails.nationality] })] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Address" }), _jsxs("div", { className: "mt-2", children: [_jsx("p", { className: "text-slate-300 text-sm", children: selectedUserDetails.address.street }), _jsxs("p", { className: "text-slate-300 text-sm", children: [selectedUserDetails.address.city, ", ", selectedUserDetails.address.postalCode] }), _jsx("p", { className: "text-slate-300 text-sm", children: selectedUserDetails.address.country })] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Risk Factors" }), _jsxs("div", { className: "mt-2 space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-slate-300 text-sm", children: "PEP Status" }), _jsx(Badge, { className: selectedUserDetails.politicallyExposed ? 'bg-red-500/20 text-red-400' : 'bg-green-500/20 text-green-400', children: selectedUserDetails.politicallyExposed ? 'Yes' : 'No' })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-slate-300 text-sm", children: "Sanctions" }), _jsx(Badge, { className: selectedUserDetails.sanctions ? 'bg-red-500/20 text-red-400' : 'bg-green-500/20 text-green-400', children: selectedUserDetails.sanctions ? 'Match' : 'Clear' })] })] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Financial Information" }), _jsxs("div", { className: "mt-2 space-y-1", children: [_jsxs("p", { className: "text-slate-300 text-sm", children: ["Source of Funds: ", selectedUserDetails.sourceOfFunds] }), _jsxs("p", { className: "text-slate-300 text-sm", children: ["Estimated Worth: ", selectedUserDetails.estimatedWorth] })] })] }), _jsxs("div", { className: "pt-4 space-y-2", children: [_jsx(Button, { className: "w-full bg-green-500 hover:bg-green-600 text-white", onClick: () => approveUserMutation.mutate({
                                                                        userId: selectedUser,
                                                                        level: 'full'
                                                                    }), children: "Approve KYC" }), _jsx(Button, { variant: "outline", className: "w-full border-red-500/20 text-red-400 hover:bg-red-500/10", onClick: () => rejectUserMutation.mutate({
                                                                        userId: selectedUser,
                                                                        reason: 'Failed verification requirements'
                                                                    }), children: "Reject Application" }), _jsx(Button, { variant: "outline", className: "w-full border-blue-500/20 text-blue-400 hover:bg-blue-500/10", children: "Request More Documents" })] })] })] })) })] }) }), _jsx(TabsContent, { value: "alerts", className: "space-y-6", children: _jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "AML Alerts & Suspicious Activity" }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: amlAlerts?.map((alert) => (_jsxs("div", { className: "p-4 bg-slate-800/30 rounded-lg border border-slate-600/30", children: [_jsxs("div", { className: "flex items-center justify-between mb-3", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx("div", { className: `w-3 h-3 rounded-full ${alert.severity === 'critical' ? 'bg-red-500' :
                                                                            alert.severity === 'high' ? 'bg-orange-500' :
                                                                                alert.severity === 'medium' ? 'bg-yellow-500' : 'bg-blue-500'}` }), _jsxs("div", { children: [_jsx("p", { className: "text-white font-medium", children: alert.description }), _jsxs("p", { className: "text-slate-400 text-sm", children: ["User: ", alert.userId] })] })] }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(Badge, { className: `${alert.severity === 'critical' ? 'bg-red-500/20 text-red-400' :
                                                                            alert.severity === 'high' ? 'bg-orange-500/20 text-orange-400' :
                                                                                alert.severity === 'medium' ? 'bg-yellow-500/20 text-yellow-400' :
                                                                                    'bg-blue-500/20 text-blue-400'}`, children: alert.severity }), _jsx(Badge, { className: getStatusColor(alert.status), children: alert.status })] })] }), _jsxs("div", { className: "grid grid-cols-2 gap-4 mb-3 text-sm", children: [_jsxs("div", { children: [_jsx("p", { className: "text-slate-400", children: "Alert Type" }), _jsx("p", { className: "text-white capitalize", children: alert.type.replace('_', ' ') })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400", children: "Created" }), _jsx("p", { className: "text-white", children: new Date(alert.createdAt).toLocaleString() })] })] }), alert.status === 'open' && (_jsxs("div", { className: "flex space-x-2", children: [_jsx(Button, { size: "sm", className: "bg-green-500/20 border border-green-500/30 text-green-400 hover:bg-green-500/30", onClick: () => resolveAlertMutation.mutate({
                                                                    alertId: alert.id,
                                                                    resolution: 'false_positive',
                                                                    notes: 'Reviewed and determined to be false positive'
                                                                }), children: "Mark False Positive" }), _jsx(Button, { size: "sm", className: "bg-blue-500/20 border border-blue-500/30 text-blue-400 hover:bg-blue-500/30", children: "Investigate" }), _jsx(Button, { size: "sm", className: "bg-red-500/20 border border-red-500/30 text-red-400 hover:bg-red-500/30", children: "Escalate" })] }))] }, alert.id))) }) })] }) }), _jsx(TabsContent, { value: "monitoring", className: "space-y-6", children: _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-6", children: [_jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "Transaction Monitoring Rules" }) }), _jsx(CardContent, { className: "space-y-4", children: _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsxs("div", { children: [_jsx("p", { className: "text-white font-medium", children: "High Value Transactions" }), _jsx("p", { className: "text-slate-400 text-sm", children: "Threshold: $10,000+" })] }), _jsx(Badge, { className: "bg-green-500/20 text-green-400", children: "Active" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsxs("div", { children: [_jsx("p", { className: "text-white font-medium", children: "Rapid Fire Betting" }), _jsx("p", { className: "text-slate-400 text-sm", children: "Threshold: 20+ bets/hour" })] }), _jsx(Badge, { className: "bg-green-500/20 text-green-400", children: "Active" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsxs("div", { children: [_jsx("p", { className: "text-white font-medium", children: "Unusual Deposit Patterns" }), _jsx("p", { className: "text-slate-400 text-sm", children: "Multiple sources detection" })] }), _jsx(Badge, { className: "bg-green-500/20 text-green-400", children: "Active" })] }), _jsxs("div", { className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsxs("div", { children: [_jsx("p", { className: "text-white font-medium", children: "Cross-Border Monitoring" }), _jsx("p", { className: "text-slate-400 text-sm", children: "Geo-location tracking" })] }), _jsx(Badge, { className: "bg-yellow-500/20 text-yellow-400", children: "Alert" })] })] }) })] }), _jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "Sanctions & PEP Screening" }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs("div", { className: "text-center p-4 bg-slate-800/30 rounded-lg", children: [_jsx("p", { className: "text-2xl font-bold text-white", children: "0" }), _jsx("p", { className: "text-slate-400 text-sm", children: "Sanctions Matches" })] }), _jsxs("div", { className: "text-center p-4 bg-slate-800/30 rounded-lg", children: [_jsx("p", { className: "text-2xl font-bold text-yellow-400", children: "3" }), _jsx("p", { className: "text-slate-400 text-sm", children: "PEP Matches" })] })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("p", { className: "text-slate-300 font-medium", children: "Latest Screenings" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-slate-400", children: "OFAC Sanctions List" }), _jsx("span", { className: "text-green-400", children: "Clear" })] }), _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-slate-400", children: "EU Sanctions List" }), _jsx("span", { className: "text-green-400", children: "Clear" })] }), _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-slate-400", children: "PEP Database" }), _jsx("span", { className: "text-yellow-400", children: "3 Matches" })] }), _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-slate-400", children: "Adverse Media" }), _jsx("span", { className: "text-green-400", children: "Clear" })] })] })] })] })] })] }) }), _jsx(TabsContent, { value: "reports", className: "space-y-6", children: _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-6", children: [_jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "Regulatory Reports" }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs(Button, { className: "w-full justify-between bg-slate-800/50 hover:bg-slate-700/50 text-white", children: [_jsx("span", { children: "Suspicious Activity Report (SAR)" }), _jsx(FileText, { className: "h-4 w-4" })] }), _jsxs(Button, { className: "w-full justify-between bg-slate-800/50 hover:bg-slate-700/50 text-white", children: [_jsx("span", { children: "Currency Transaction Report (CTR)" }), _jsx(FileText, { className: "h-4 w-4" })] }), _jsxs(Button, { className: "w-full justify-between bg-slate-800/50 hover:bg-slate-700/50 text-white", children: [_jsx("span", { children: "Monthly Compliance Summary" }), _jsx(FileText, { className: "h-4 w-4" })] }), _jsxs(Button, { className: "w-full justify-between bg-slate-800/50 hover:bg-slate-700/50 text-white", children: [_jsx("span", { children: "KYC Completion Report" }), _jsx(FileText, { className: "h-4 w-4" })] })] })] }), _jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "Compliance Metrics" }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-slate-300", children: "KYC Completion Rate" }), _jsx("span", { className: "text-white font-bold", children: "94.2%" })] }), _jsx(Progress, { value: 94.2, className: "h-2 bg-slate-800" })] }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-slate-300", children: "AML Alert Resolution" }), _jsx("span", { className: "text-white font-bold", children: "87.5%" })] }), _jsx(Progress, { value: 87.5, className: "h-2 bg-slate-800" })] }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-slate-300", children: "Document Verification" }), _jsx("span", { className: "text-white font-bold", children: "91.8%" })] }), _jsx(Progress, { value: 91.8, className: "h-2 bg-slate-800" })] }), _jsx("div", { className: "pt-4", children: _jsxs("p", { className: "text-slate-400 text-sm", children: ["Last audit: ", new Date().toLocaleDateString()] }) })] })] })] }) })] })] }) }));
}
