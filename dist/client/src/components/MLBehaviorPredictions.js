import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { useQuery } from "@tanstack/react-query";
import { Brain, TrendingUp, Target, Clock, DollarSign, BarChart3, AlertCircle } from "lucide-react";
export default function MLBehaviorPredictions() {
    const [selectedTimeframe, setSelectedTimeframe] = useState('7d');
    const { data: behaviorAnalysis } = useQuery({
        queryKey: ["/api/ml/behavior-analysis", selectedTimeframe],
        refetchInterval: 300000, // Update every 5 minutes
    });
    const { data: mlInsights = [] } = useQuery({
        queryKey: ["/api/ml/insights"],
        refetchInterval: 600000, // Update every 10 minutes
    });
    const getConfidenceColor = (confidence) => {
        if (confidence >= 0.8)
            return 'text-winnex-green';
        if (confidence >= 0.6)
            return 'text-winnex-orange';
        return 'text-red-400';
    };
    const getRiskColor = (level) => {
        switch (level) {
            case 'low': return 'text-winnex-green';
            case 'medium': return 'text-winnex-orange';
            case 'high': return 'text-red-400';
            default: return 'text-white';
        }
    };
    const getImpactIcon = (impact) => {
        switch (impact) {
            case 'positive': return _jsx(TrendingUp, { className: "text-winnex-green", size: 16 });
            case 'negative': return _jsx(AlertCircle, { className: "text-red-400", size: 16 });
            default: return _jsx(BarChart3, { className: "text-winnex-blue", size: 16 });
        }
    };
    return (_jsxs("div", { className: "space-y-6", children: [_jsx("div", { className: "card-modern p-6 gradient-accent", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Brain, { className: "text-winnex-purple", size: 32 }), _jsxs("div", { children: [_jsx("h2", { className: "text-2xl font-bold text-white", children: "AI Behavior Analysis" }), _jsx("p", { className: "text-white/80", children: "Machine learning insights into your betting patterns and preferences" })] })] }), _jsx("div", { className: "glass rounded-2xl p-4", children: _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "text-2xl font-bold text-winnex-purple", children: behaviorAnalysis?.behaviorScore || 0 }), _jsx("div", { className: "text-white/70 text-sm", children: "Behavior Score" })] }) })] }) }), _jsx("div", { className: "flex justify-center", children: _jsx("div", { className: "glass rounded-xl p-1 flex", children: ['1d', '7d', '30d', '90d'].map((timeframe) => (_jsx("button", { onClick: () => setSelectedTimeframe(timeframe), className: `px-6 py-2 rounded-lg font-medium transition-all ${selectedTimeframe === timeframe ? 'bg-winnex-green text-black' : 'text-white/70 hover:text-white'}`, children: timeframe }, timeframe))) }) }), behaviorAnalysis && (_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6", children: [_jsxs("div", { className: "card-modern p-6 text-center", children: [_jsx(Target, { className: "mx-auto mb-3 text-winnex-green", size: 24 }), _jsxs("div", { className: "text-2xl font-bold text-winnex-green", children: [Math.round(behaviorAnalysis.predictedActions.nextBetProbability * 100), "%"] }), _jsx("div", { className: "text-white/60 text-sm", children: "Next Bet Probability" }), _jsx("div", { className: "text-xs text-white/50 mt-1", children: "Within 24 hours" })] }), _jsxs("div", { className: "card-modern p-6 text-center", children: [_jsx(DollarSign, { className: "mx-auto mb-3 text-winnex-blue", size: 24 }), _jsxs("div", { className: "text-2xl font-bold text-winnex-blue", children: ["$", behaviorAnalysis.predictedActions.suggestedStake] }), _jsx("div", { className: "text-white/60 text-sm", children: "Optimal Stake" }), _jsx("div", { className: "text-xs text-white/50 mt-1", children: "Based on bankroll" })] }), _jsxs("div", { className: "card-modern p-6 text-center", children: [_jsx(Clock, { className: "mx-auto mb-3 text-winnex-orange", size: 24 }), _jsx("div", { className: "text-lg font-bold text-winnex-orange", children: behaviorAnalysis.predictedActions.optimalBettingTime }), _jsx("div", { className: "text-white/60 text-sm", children: "Best Time to Bet" }), _jsx("div", { className: "text-xs text-white/50 mt-1", children: "Highest win rate" })] }), _jsxs("div", { className: "card-modern p-6 text-center", children: [_jsx(AlertCircle, { className: "mx-auto mb-3 text-red-400", size: 24 }), _jsxs("div", { className: "text-2xl font-bold text-red-400", children: [Math.round(behaviorAnalysis.predictedActions.churnRisk * 100), "%"] }), _jsx("div", { className: "text-white/60 text-sm", children: "Churn Risk" }), _jsx("div", { className: "text-xs text-white/50 mt-1", children: "Next 30 days" })] })] })), behaviorAnalysis?.predictions && (_jsxs("div", { className: "card-modern p-6", children: [_jsx("h3", { className: "text-xl font-bold mb-4", children: "AI Predictions" }), _jsx("div", { className: "space-y-4", children: behaviorAnalysis.predictions.map((prediction, index) => (_jsxs("div", { className: "glass rounded-lg p-4", children: [_jsxs("div", { className: "flex items-start justify-between mb-3", children: [_jsxs("div", { className: "flex-1", children: [_jsxs("div", { className: "flex items-center space-x-2 mb-2", children: [_jsx("span", { className: "capitalize font-medium", children: prediction.type.replace('_', ' ') }), _jsxs("span", { className: `text-sm px-2 py-1 rounded-full ${getRiskColor(prediction.risk_level)} bg-current/10`, children: [prediction.risk_level, " risk"] })] }), _jsx("p", { className: "text-white/80 mb-2", children: prediction.prediction }), _jsxs("div", { className: "text-sm text-white/60", children: ["Timeframe: ", prediction.timeframe] })] }), _jsxs("div", { className: "text-right", children: [_jsxs("div", { className: `text-lg font-bold ${getConfidenceColor(prediction.confidence)}`, children: [Math.round(prediction.confidence * 100), "%"] }), _jsx("div", { className: "text-xs text-white/60", children: "Confidence" })] })] }), _jsxs("div", { className: "mb-3", children: [_jsx("h4", { className: "font-medium mb-2", children: "Reasoning:" }), _jsx("ul", { className: "text-sm text-white/70 space-y-1", children: prediction.reasoning.map((reason, idx) => (_jsxs("li", { children: ["\u2022 ", reason] }, idx))) })] }), _jsxs("div", { children: [_jsx("h4", { className: "font-medium mb-2", children: "Actionable Insights:" }), _jsx("ul", { className: "text-sm text-winnex-green space-y-1", children: prediction.actionable_insights.map((insight, idx) => (_jsxs("li", { children: ["\u2192 ", insight] }, idx))) })] })] }, index))) })] })), _jsx("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-6", children: mlInsights.map((insight) => (_jsxs("div", { className: "card-modern p-6", children: [_jsxs("div", { className: "flex items-start justify-between mb-4", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [getImpactIcon(insight.impact), _jsx("h3", { className: "font-bold", children: insight.title })] }), _jsxs("div", { className: "text-right", children: [_jsxs("div", { className: `text-lg font-bold ${getConfidenceColor(insight.confidence)}`, children: [Math.round(insight.confidence * 100), "%"] }), _jsx("div", { className: "text-xs text-white/60", children: "Confidence" })] })] }), _jsx("p", { className: "text-white/80 mb-4", children: insight.description }), _jsxs("div", { className: "grid grid-cols-3 gap-4 mb-4", children: [_jsxs("div", { className: "text-center", children: [_jsx("div", { className: "text-lg font-bold", children: insight.metrics.current }), _jsx("div", { className: "text-xs text-white/60", children: "Current" })] }), _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "text-lg font-bold text-winnex-blue", children: insight.metrics.predicted }), _jsx("div", { className: "text-xs text-white/60", children: "Predicted" })] }), _jsxs("div", { className: "text-center", children: [_jsxs("div", { className: `text-lg font-bold ${insight.metrics.change > 0 ? 'text-winnex-green' : 'text-red-400'}`, children: [insight.metrics.change > 0 ? '+' : '', insight.metrics.change, "%"] }), _jsx("div", { className: "text-xs text-white/60", children: "Change" })] })] }), _jsxs("div", { className: "glass rounded-lg p-3", children: [_jsx("div", { className: "font-medium mb-1", children: "Recommendation:" }), _jsx("div", { className: "text-sm text-winnex-green", children: insight.recommendation })] })] }, insight.id))) }), behaviorAnalysis?.seasonalPatterns && (_jsxs("div", { className: "card-modern p-6", children: [_jsx("h3", { className: "text-xl font-bold mb-4", children: "Seasonal Betting Patterns" }), _jsx("div", { className: "grid grid-cols-2 md:grid-cols-6 gap-4", children: behaviorAnalysis.seasonalPatterns.map((pattern, index) => (_jsxs("div", { className: "text-center", children: [_jsxs("div", { className: "glass rounded-lg p-3 mb-2", children: [_jsx("div", { className: "font-medium text-sm", children: pattern.month }), _jsxs("div", { className: "text-xs text-white/60 mt-1", children: ["Activity: ", pattern.activity, "%"] }), _jsxs("div", { className: "text-xs text-white/60", children: ["Stake: $", pattern.avgStake] }), _jsxs("div", { className: "text-xs text-winnex-green", children: ["Win: ", pattern.winRate, "%"] })] }), _jsx("div", { className: "w-full bg-winnex-green rounded", style: { height: `${Math.max(pattern.activity / 2, 4)}px` } })] }, index))) })] })), behaviorAnalysis && (_jsxs("div", { className: "card-modern p-6", children: [_jsx("h3", { className: "text-xl font-bold mb-4", children: "Risk Profile Analysis" }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsxs("div", { className: "text-2xl font-bold capitalize mb-2", children: [behaviorAnalysis.riskProfile, " Bettor"] }), _jsx("p", { className: "text-white/80", children: "Based on your betting patterns, stake sizes, and market preferences" })] }), _jsxs("div", { className: "text-right", children: [_jsx("div", { className: "text-lg font-bold", children: "Preferred Sports:" }), _jsx("div", { className: "flex flex-wrap gap-1 mt-2", children: behaviorAnalysis.predictedActions.preferredSports.map((sport, index) => (_jsx("span", { className: "text-xs bg-winnex-blue/20 text-winnex-blue px-2 py-1 rounded", children: sport }, index))) })] })] })] }))] }));
}
