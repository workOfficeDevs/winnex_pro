import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Building2, Users, DollarSign, Settings, Globe, Palette, Code, BarChart3 } from 'lucide-react';
import { apiRequest } from '@/lib/queryClient';
export default function WhiteLabelPlatform() {
    const [selectedPartner, setSelectedPartner] = useState('');
    const [selectedTemplate, setSelectedTemplate] = useState('');
    const queryClient = useQueryClient();
    const { data: partners } = useQuery({
        queryKey: ['/api/whitelabel/partners'],
        queryFn: () => apiRequest('/api/whitelabel/partners'),
    });
    const { data: revenueShares } = useQuery({
        queryKey: ['/api/whitelabel/revenue-shares'],
        queryFn: () => apiRequest('/api/whitelabel/revenue-shares'),
    });
    const { data: brandingTemplates } = useQuery({
        queryKey: ['/api/whitelabel/branding-templates'],
        queryFn: () => apiRequest('/api/whitelabel/branding-templates'),
    });
    const { data: featureModules } = useQuery({
        queryKey: ['/api/whitelabel/feature-modules'],
        queryFn: () => apiRequest('/api/whitelabel/feature-modules'),
    });
    const { data: analytics } = useQuery({
        queryKey: ['/api/whitelabel/analytics'],
        queryFn: () => apiRequest('/api/whitelabel/analytics'),
    });
    const createPartnerMutation = useMutation({
        mutationFn: (data) => apiRequest('/api/whitelabel/create-partner', 'POST', data),
        onSuccess: () => {
            queryClient.invalidateQueries({ queryKey: ['/api/whitelabel/partners'] });
        },
    });
    const updatePartnerMutation = useMutation({
        mutationFn: (data) => apiRequest('/api/whitelabel/update-partner', 'PUT', data),
        onSuccess: () => {
            queryClient.invalidateQueries({ queryKey: ['/api/whitelabel/partners'] });
        },
    });
    const processPayoutMutation = useMutation({
        mutationFn: (payoutId) => apiRequest('/api/whitelabel/process-payout', 'POST', { payoutId }),
        onSuccess: () => {
            queryClient.invalidateQueries({ queryKey: ['/api/whitelabel/revenue-shares'] });
        },
    });
    const deployPartnerMutation = useMutation({
        mutationFn: (data) => apiRequest('/api/whitelabel/deploy-partner', 'POST', data),
        onSuccess: () => {
            queryClient.invalidateQueries({ queryKey: ['/api/whitelabel/partners'] });
        },
    });
    const getTierColor = (tier) => {
        switch (tier) {
            case 'enterprise': return 'bg-purple-500/20 text-purple-400 border-purple-500/20';
            case 'professional': return 'bg-blue-500/20 text-blue-400 border-blue-500/20';
            case 'starter': return 'bg-green-500/20 text-green-400 border-green-500/20';
            default: return 'bg-gray-500/20 text-gray-400 border-gray-500/20';
        }
    };
    const getStatusColor = (status) => {
        switch (status) {
            case 'active': return 'bg-green-500/20 text-green-400';
            case 'pending': return 'bg-yellow-500/20 text-yellow-400';
            case 'suspended': return 'bg-red-500/20 text-red-400';
            default: return 'bg-gray-500/20 text-gray-400';
        }
    };
    return (_jsx("div", { className: "min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-6", children: _jsxs("div", { className: "max-w-7xl mx-auto", children: [_jsxs("div", { className: "mb-8", children: [_jsx("h1", { className: "text-4xl font-bold text-white mb-2", children: "White-Label Platform" }), _jsx("p", { className: "text-slate-300", children: "Multi-tenant B2B solution for partner operators worldwide" })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-4 gap-6 mb-8", children: [_jsx(Card, { className: "bg-black/20 border-blue-500/20 backdrop-blur-xl", children: _jsx(CardContent, { className: "p-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-blue-400 text-sm font-medium", children: "Active Partners" }), _jsx("p", { className: "text-3xl font-bold text-white", children: analytics?.overview?.activePartners || 0 })] }), _jsx(Building2, { className: "h-8 w-8 text-blue-400" })] }) }) }), _jsx(Card, { className: "bg-black/20 border-green-500/20 backdrop-blur-xl", children: _jsx(CardContent, { className: "p-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-green-400 text-sm font-medium", children: "Monthly Revenue" }), _jsxs("p", { className: "text-3xl font-bold text-white", children: ["$", analytics?.overview?.totalRevenue?.toLocaleString() || 0] })] }), _jsx(DollarSign, { className: "h-8 w-8 text-green-400" })] }) }) }), _jsx(Card, { className: "bg-black/20 border-purple-500/20 backdrop-blur-xl", children: _jsx(CardContent, { className: "p-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-purple-400 text-sm font-medium", children: "Total Users" }), _jsx("p", { className: "text-3xl font-bold text-white", children: partners?.reduce((sum, p) => sum + p.totalUsers, 0)?.toLocaleString() || 0 })] }), _jsx(Users, { className: "h-8 w-8 text-purple-400" })] }) }) }), _jsx(Card, { className: "bg-black/20 border-yellow-500/20 backdrop-blur-xl", children: _jsx(CardContent, { className: "p-6", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-yellow-400 text-sm font-medium", children: "Growth Rate" }), _jsxs("p", { className: "text-3xl font-bold text-white", children: ["+", analytics?.overview?.growthRate || 0, "%"] })] }), _jsx(BarChart3, { className: "h-8 w-8 text-yellow-400" })] }) }) })] }), _jsxs(Tabs, { defaultValue: "partners", className: "space-y-6", children: [_jsxs(TabsList, { className: "bg-black/20 backdrop-blur-xl border-white/10", children: [_jsx(TabsTrigger, { value: "partners", className: "data-[state=active]:bg-green-500/20", children: "Partner Management" }), _jsx(TabsTrigger, { value: "branding", className: "data-[state=active]:bg-green-500/20", children: "Branding Templates" }), _jsx(TabsTrigger, { value: "features", className: "data-[state=active]:bg-green-500/20", children: "Feature Modules" }), _jsx(TabsTrigger, { value: "revenue", className: "data-[state=active]:bg-green-500/20", children: "Revenue Sharing" }), _jsx(TabsTrigger, { value: "analytics", className: "data-[state=active]:bg-green-500/20", children: "Partner Analytics" })] }), _jsxs(TabsContent, { value: "partners", className: "space-y-6", children: [_jsx("div", { className: "flex justify-between items-center", children: _jsxs(Button, { className: "bg-green-500 hover:bg-green-600", children: [_jsx(Building2, { className: "h-4 w-4 mr-2" }), "Add New Partner"] }) }), _jsx("div", { className: "grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6", children: partners?.map((partner) => (_jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsxs("div", { className: "flex justify-between items-start", children: [_jsxs("div", { children: [_jsx(CardTitle, { className: "text-white", children: partner.name }), _jsx("p", { className: "text-slate-400 text-sm", children: partner.domain })] }), _jsxs("div", { className: "flex flex-col space-y-1", children: [_jsx(Badge, { className: getTierColor(partner.tier), children: partner.tier }), _jsx(Badge, { className: getStatusColor(partner.status), children: partner.status })] })] }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Monthly Revenue" }), _jsxs("p", { className: "text-green-400 font-bold", children: ["$", partner.monthlyRevenue.toLocaleString()] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Total Users" }), _jsx("p", { className: "text-white font-bold", children: partner.totalUsers.toLocaleString() })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Revenue Share" }), _jsxs("p", { className: "text-blue-400 font-bold", children: [partner.revenueShare, "%"] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Region" }), _jsx("p", { className: "text-white font-bold", children: partner.region })] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm mb-2", children: "Performance" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-slate-300", children: "Uptime" }), _jsxs("span", { className: "text-green-400", children: [partner.performance.uptime, "%"] })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-slate-300", children: "Response Time" }), _jsxs("span", { className: "text-blue-400", children: [partner.performance.avgResponseTime, "ms"] })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-slate-300", children: "User Satisfaction" }), _jsxs("span", { className: "text-purple-400", children: [partner.performance.userSatisfaction, "/5"] })] })] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm mb-2", children: "Customizations" }), _jsxs("div", { className: "flex flex-wrap gap-1", children: [partner.customizations.features.slice(0, 3).map((feature, index) => (_jsx(Badge, { variant: "secondary", className: "text-xs", children: feature }, index))), partner.customizations.features.length > 3 && (_jsxs(Badge, { variant: "secondary", className: "text-xs", children: ["+", partner.customizations.features.length - 3] }))] })] }), _jsxs("div", { className: "flex space-x-2", children: [_jsxs(Button, { size: "sm", variant: "outline", className: "flex-1", children: [_jsx(Settings, { className: "h-3 w-3 mr-1" }), "Configure"] }), _jsxs(Button, { size: "sm", className: "flex-1 bg-blue-500 hover:bg-blue-600", children: [_jsx(Globe, { className: "h-3 w-3 mr-1" }), "View Site"] })] })] })] }, partner.id))) })] }), _jsx(TabsContent, { value: "branding", className: "space-y-6", children: _jsx("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6", children: brandingTemplates?.map((template) => (_jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsxs("div", { className: "flex justify-between items-center", children: [_jsx(CardTitle, { className: "text-white", children: template.name }), _jsx(Badge, { className: "bg-blue-500/20 text-blue-400", children: template.category })] }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsx("div", { className: "aspect-video bg-slate-800/50 rounded-lg flex items-center justify-center", children: _jsx(Palette, { className: "h-12 w-12 text-slate-400" }) }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm mb-2", children: "Color Scheme" }), _jsxs("div", { className: "flex space-x-2", children: [_jsx("div", { className: "w-8 h-8 rounded border border-white/20", style: { backgroundColor: template.colors.primary } }), _jsx("div", { className: "w-8 h-8 rounded border border-white/20", style: { backgroundColor: template.colors.secondary } }), _jsx("div", { className: "w-8 h-8 rounded border border-white/20", style: { backgroundColor: template.colors.accent } }), _jsx("div", { className: "w-8 h-8 rounded border border-white/20", style: { backgroundColor: template.colors.background } })] })] }), _jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Pricing" }), _jsxs("p", { className: "text-green-400 font-bold", children: ["$", template.pricing, "/month"] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Popularity" }), _jsxs("p", { className: "text-blue-400 font-bold", children: [template.popularity, "%"] })] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm mb-2", children: "Features" }), _jsxs("div", { className: "flex flex-wrap gap-1", children: [template.features.slice(0, 3).map((feature, index) => (_jsx(Badge, { variant: "secondary", className: "text-xs", children: feature }, index))), template.features.length > 3 && (_jsxs(Badge, { variant: "secondary", className: "text-xs", children: ["+", template.features.length - 3] }))] })] }), _jsx(Button, { className: "w-full bg-purple-500 hover:bg-purple-600", onClick: () => setSelectedTemplate(template.id), children: "Select Template" })] })] }, template.id))) }) }), _jsx(TabsContent, { value: "features", className: "space-y-6", children: _jsx("div", { className: "space-y-4", children: featureModules?.map((module) => (_jsx(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: _jsxs(CardContent, { className: "p-6", children: [_jsx("div", { className: "flex justify-between items-start mb-4", children: _jsxs("div", { className: "flex-1", children: [_jsxs("div", { className: "flex items-center space-x-3 mb-2", children: [_jsx("h3", { className: "text-white font-bold text-lg", children: module.name }), _jsx(Badge, { className: `${module.category === 'enterprise' ? 'bg-purple-500/20 text-purple-400' :
                                                                        module.category === 'premium' ? 'bg-blue-500/20 text-blue-400' :
                                                                            'bg-green-500/20 text-green-400'}`, children: module.category }), _jsx(Badge, { className: module.enabled ? 'bg-green-500/20 text-green-400' : 'bg-gray-500/20 text-gray-400', children: module.enabled ? 'Enabled' : 'Disabled' })] }), _jsx("p", { className: "text-slate-300", children: module.description })] }) }), _jsxs("div", { className: "grid grid-cols-2 md:grid-cols-4 gap-4 mb-4", children: [_jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Setup Fee" }), _jsxs("p", { className: "text-white font-bold", children: ["$", module.pricing.setup] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Monthly" }), _jsxs("p", { className: "text-green-400 font-bold", children: ["$", module.pricing.monthly] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Usage Fee" }), _jsxs("p", { className: "text-blue-400 font-bold", children: ["$", module.pricing.usage, "/tx"] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Adoption" }), _jsxs("p", { className: "text-purple-400 font-bold", children: [module.metrics.adoption, "%"] })] })] }), module.dependencies.length > 0 && (_jsxs("div", { className: "mb-4", children: [_jsx("p", { className: "text-slate-400 text-sm mb-2", children: "Dependencies" }), _jsx("div", { className: "flex flex-wrap gap-1", children: module.dependencies.map((dep, index) => (_jsx(Badge, { variant: "secondary", className: "text-xs", children: dep }, index))) })] })), _jsxs("div", { className: "grid grid-cols-3 gap-4 pt-4 border-t border-slate-600", children: [_jsxs("div", { className: "text-center", children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Performance" }), _jsxs("p", { className: "text-white font-bold", children: [module.metrics.performance, "/10"] })] }), _jsxs("div", { className: "text-center", children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Satisfaction" }), _jsxs("p", { className: "text-green-400 font-bold", children: [module.metrics.satisfaction, "/5"] })] }), _jsx("div", { className: "text-center", children: _jsxs(Button, { size: "sm", className: "bg-blue-500 hover:bg-blue-600", children: [_jsx(Code, { className: "h-3 w-3 mr-1" }), "Configure"] }) })] })] }) }, module.id))) }) }), _jsx(TabsContent, { value: "revenue", className: "space-y-6", children: _jsx("div", { className: "space-y-4", children: revenueShares?.map((share) => (_jsx(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: _jsxs(CardContent, { className: "p-6", children: [_jsxs("div", { className: "flex justify-between items-start mb-4", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-white font-bold text-lg", children: share.partnerName }), _jsx("p", { className: "text-slate-400", children: share.period })] }), _jsx("div", { className: "text-right", children: _jsx(Badge, { className: `${share.status === 'processed' ? 'bg-green-500/20 text-green-400' :
                                                                share.status === 'disputed' ? 'bg-red-500/20 text-red-400' :
                                                                    'bg-yellow-500/20 text-yellow-400'}`, children: share.status }) })] }), _jsxs("div", { className: "grid grid-cols-2 md:grid-cols-5 gap-4 mb-4", children: [_jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Gross Revenue" }), _jsxs("p", { className: "text-white font-bold", children: ["$", share.grossRevenue.toLocaleString()] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Partner Share" }), _jsxs("p", { className: "text-green-400 font-bold", children: ["$", share.partnerShare.toLocaleString()] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Platform Fee" }), _jsxs("p", { className: "text-blue-400 font-bold", children: ["$", share.platformFee.toLocaleString()] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Net Payout" }), _jsxs("p", { className: "text-purple-400 font-bold", children: ["$", share.netPayout.toLocaleString()] })] }), _jsxs("div", { children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Transactions" }), _jsx("p", { className: "text-white font-bold", children: share.transactions.toLocaleString() })] })] }), share.status === 'pending' && (_jsxs("div", { className: "flex space-x-2", children: [_jsx(Button, { size: "sm", className: "bg-green-500 hover:bg-green-600", onClick: () => processPayoutMutation.mutate(share.partnerId), children: "Process Payout" }), _jsx(Button, { size: "sm", variant: "outline", children: "Review Details" })] }))] }) }, share.partnerId))) }) }), _jsxs(TabsContent, { value: "analytics", className: "space-y-6", children: [_jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-6", children: [_jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "Top Performing Partners" }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: analytics?.performance?.topPerformers?.map((performer, index) => (_jsxs("div", { className: "flex items-center justify-between p-3 bg-slate-800/30 rounded-lg", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx("div", { className: `w-8 h-8 rounded-full flex items-center justify-center font-bold ${index === 0 ? 'bg-yellow-500 text-black' :
                                                                                index === 1 ? 'bg-gray-400 text-black' :
                                                                                    index === 2 ? 'bg-yellow-600 text-black' :
                                                                                        'bg-slate-600 text-white'}`, children: index + 1 }), _jsx("span", { className: "text-white font-medium", children: performer.name })] }), _jsxs("div", { className: "text-right", children: [_jsxs("p", { className: "text-green-400 font-bold", children: ["$", performer.revenue.toLocaleString()] }), _jsxs("p", { className: "text-slate-400 text-sm", children: ["+", performer.growth, "% growth"] })] })] }, index))) }) })] }), _jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "Regional Breakdown" }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: analytics?.performance?.regionBreakdown?.map((region, index) => (_jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-slate-300", children: region.region }), _jsxs("span", { className: "text-white", children: [region.partners, " partners"] })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-slate-400", children: "Revenue" }), _jsxs("span", { className: "text-green-400", children: ["$", region.revenue.toLocaleString()] })] }), _jsx(Progress, { value: (region.revenue / analytics.overview.totalRevenue) * 100, className: "h-2 bg-slate-800" })] }, index))) }) })] })] }), _jsxs(Card, { className: "bg-black/20 border-white/10 backdrop-blur-xl", children: [_jsx(CardHeader, { children: _jsx(CardTitle, { className: "text-white", children: "Growth Trends" }) }), _jsx(CardContent, { children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-6", children: [_jsxs("div", { className: "text-center p-4 bg-slate-800/30 rounded-lg", children: [_jsx("p", { className: "text-slate-400 text-sm", children: "New Partners (Month)" }), _jsx("p", { className: "text-3xl font-bold text-green-400", children: analytics?.trends?.monthlyGrowth?.[analytics.trends.monthlyGrowth.length - 1]?.newPartners || 0 })] }), _jsxs("div", { className: "text-center p-4 bg-slate-800/30 rounded-lg", children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Revenue Growth" }), _jsxs("p", { className: "text-3xl font-bold text-blue-400", children: ["+", analytics?.overview?.growthRate || 0, "%"] })] }), _jsxs("div", { className: "text-center p-4 bg-slate-800/30 rounded-lg", children: [_jsx("p", { className: "text-slate-400 text-sm", children: "Churn Rate" }), _jsxs("p", { className: "text-3xl font-bold text-red-400", children: [analytics?.trends?.monthlyGrowth?.[analytics.trends.monthlyGrowth.length - 1]?.churn || 0, "%"] })] })] }) })] })] })] })] }) }));
}
