import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { motion } from 'framer-motion';
import { Palette, Activity, HelpCircle, Zap, Settings, Trophy, Star, Crown, Target, Award, Flame } from 'lucide-react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
// Import our new components
import { SuccessBounce, ErrorShake, LoadingPulse, HoverScale, EnergyPerformanceBadge, AnimatedTooltip, CelebrationEffect, FloatingBadge } from '@/components/MicroInteractions';
import OnboardingWizard from '@/components/OnboardingWizard';
import { ThemeCustomizer, PersonalizedThemeProvider } from '@/components/PersonalizedThemes';
import RealTimeActivityVisualizer from '@/components/RealTimeActivityVisualizer';
const EnhancedInteractiveDemo = () => {
    const [activeSection, setActiveSection] = useState('micro-interactions');
    const [showThemeCustomizer, setShowThemeCustomizer] = useState(false);
    const [demoStates, setDemoStates] = useState({
        successTrigger: false,
        errorTrigger: false,
        isLoading: false,
        celebrationTrigger: false,
        floatingBadgeShow: false
    });
    // Demo handlers
    const triggerSuccess = () => {
        setDemoStates(prev => ({ ...prev, successTrigger: true }));
        setTimeout(() => setDemoStates(prev => ({ ...prev, successTrigger: false })), 1000);
    };
    const triggerError = () => {
        setDemoStates(prev => ({ ...prev, errorTrigger: true }));
        setTimeout(() => setDemoStates(prev => ({ ...prev, errorTrigger: false })), 1000);
    };
    const toggleLoading = () => {
        setDemoStates(prev => ({ ...prev, isLoading: !prev.isLoading }));
    };
    const triggerCelebration = () => {
        setDemoStates(prev => ({ ...prev, celebrationTrigger: true }));
        setTimeout(() => setDemoStates(prev => ({ ...prev, celebrationTrigger: false })), 3000);
    };
    const showFloatingBadge = () => {
        setDemoStates(prev => ({ ...prev, floatingBadgeShow: true }));
        setTimeout(() => setDemoStates(prev => ({ ...prev, floatingBadgeShow: false })), 3000);
    };
    const sections = [
        {
            id: 'micro-interactions',
            title: 'Animated Micro Interactions',
            icon: _jsx(Zap, { className: "w-5 h-5" }),
            description: 'Smooth animations that respond to user actions'
        },
        {
            id: 'performance-badges',
            title: 'Dynamic Performance Badges',
            icon: _jsx(Trophy, { className: "w-5 h-5" }),
            description: 'Energy-based performance tracking with visual feedback'
        },
        {
            id: 'onboarding-wizard',
            title: 'Contextual Onboarding',
            icon: _jsx(HelpCircle, { className: "w-5 h-5" }),
            description: 'Interactive tooltips and guided tours'
        },
        {
            id: 'personalized-themes',
            title: 'Personalized Themes',
            icon: _jsx(Palette, { className: "w-5 h-5" }),
            description: 'Customizable color schemes based on user preferences'
        },
        {
            id: 'activity-visualizer',
            title: 'Real-Time Activity',
            icon: _jsx(Activity, { className: "w-5 h-5" }),
            description: 'Live activity feeds with animated visualizations'
        }
    ];
    return (_jsx(PersonalizedThemeProvider, { children: _jsxs("div", { className: "min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-purple-900", children: [_jsx("div", { className: "bg-black/20 backdrop-blur-lg border-b border-white/10", children: _jsx("div", { className: "max-w-7xl mx-auto px-6 py-6", children: _jsxs(motion.div, { initial: { opacity: 0, y: -20 }, animate: { opacity: 1, y: 0 }, className: "text-center", children: [_jsx("h1", { className: "text-4xl font-bold bg-gradient-to-r from-blue-400 via-purple-500 to-pink-500 bg-clip-text text-transparent mb-4", children: "Enhanced Interactive Features Demo" }), _jsx("p", { className: "text-gray-300 text-lg max-w-3xl mx-auto", children: "Experience the next generation of user interface design with animated micro interactions, dynamic performance tracking, contextual onboarding, personalized themes, and real-time visualizations." })] }) }) }), _jsx("div", { className: "max-w-7xl mx-auto px-6 py-8", children: _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-4 gap-8", children: [_jsx("div", { className: "lg:col-span-1", children: _jsxs(Card, { className: "bg-black/40 backdrop-blur-lg border-white/10 sticky top-6", children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "text-white flex items-center gap-2", children: [_jsx(Settings, { className: "w-5 h-5 text-blue-400" }), "Demo Sections"] }) }), _jsx(CardContent, { className: "space-y-2", children: sections.map((section) => (_jsx(HoverScale, { children: _jsx(motion.button, { onClick: () => setActiveSection(section.id), className: `w-full text-left p-3 rounded-lg transition-all ${activeSection === section.id
                                                        ? 'bg-blue-600 text-white shadow-lg'
                                                        : 'bg-white/5 text-gray-300 hover:bg-white/10'}`, whileTap: { scale: 0.98 }, children: _jsxs("div", { className: "flex items-center gap-3", children: [section.icon, _jsxs("div", { children: [_jsx("p", { className: "font-semibold text-sm", children: section.title }), _jsx("p", { className: "text-xs opacity-75", children: section.description })] })] }) }) }, section.id))) })] }) }), _jsx("div", { className: "lg:col-span-3", children: _jsx(AnimatedTooltip, { content: "This is the main demo area where you can interact with all the new features!", children: _jsx(Card, { className: "bg-black/40 backdrop-blur-lg border-white/10 min-h-[600px]", children: _jsxs(CardContent, { className: "p-8", children: [activeSection === 'micro-interactions' && (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, className: "space-y-8", children: [_jsxs("div", { children: [_jsxs("h2", { className: "text-2xl font-bold text-white mb-4 flex items-center gap-3", children: [_jsx(Zap, { className: "w-6 h-6 text-yellow-400" }), "Animated Micro Interactions"] }), _jsx("p", { className: "text-gray-300 mb-6", children: "Experience smooth, responsive animations that provide instant feedback for user actions." })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsx(Card, { className: "bg-gray-800/50 border-gray-700", children: _jsxs(CardContent, { className: "p-6", children: [_jsx("h3", { className: "text-white font-semibold mb-4", children: "Success Bounce Animation" }), _jsx(SuccessBounce, { trigger: demoStates.successTrigger, children: _jsx(Button, { onClick: triggerSuccess, className: "bg-green-600 hover:bg-green-700 w-full", children: "Trigger Success \u2713" }) })] }) }), _jsx(Card, { className: "bg-gray-800/50 border-gray-700", children: _jsxs(CardContent, { className: "p-6", children: [_jsx("h3", { className: "text-white font-semibold mb-4", children: "Error Shake Animation" }), _jsx(ErrorShake, { trigger: demoStates.errorTrigger, children: _jsx(Button, { onClick: triggerError, variant: "destructive", className: "w-full", children: "Trigger Error \u26A0\uFE0F" }) })] }) }), _jsx(Card, { className: "bg-gray-800/50 border-gray-700", children: _jsxs(CardContent, { className: "p-6", children: [_jsx("h3", { className: "text-white font-semibold mb-4", children: "Loading Pulse Effect" }), _jsx(LoadingPulse, { isLoading: demoStates.isLoading, children: _jsx(Button, { onClick: toggleLoading, className: "bg-blue-600 hover:bg-blue-700 w-full", children: demoStates.isLoading ? 'Stop Loading' : 'Start Loading' }) })] }) }), _jsx(Card, { className: "bg-gray-800/50 border-gray-700", children: _jsxs(CardContent, { className: "p-6", children: [_jsx("h3", { className: "text-white font-semibold mb-4", children: "Celebration Effect" }), _jsx(Button, { onClick: triggerCelebration, className: "bg-purple-600 hover:bg-purple-700 w-full", children: "\uD83C\uDF89 Celebrate Win!" })] }) })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-xl font-semibold text-white", children: "Interactive Elements" }), _jsx("div", { className: "grid grid-cols-2 md:grid-cols-4 gap-4", children: [
                                                                        { icon: _jsx(Star, { className: "w-6 h-6" }), label: 'Achievement', color: 'bg-yellow-600' },
                                                                        { icon: _jsx(Crown, { className: "w-6 h-6" }), label: 'VIP Status', color: 'bg-purple-600' },
                                                                        { icon: _jsx(Target, { className: "w-6 h-6" }), label: 'Precision', color: 'bg-green-600' },
                                                                        { icon: _jsx(Flame, { className: "w-6 h-6" }), label: 'Hot Streak', color: 'bg-red-600' }
                                                                    ].map((item, index) => (_jsx(HoverScale, { children: _jsx(AnimatedTooltip, { content: `${item.label} - Click for interaction!`, children: _jsx(Card, { className: "bg-gray-800/50 border-gray-700 cursor-pointer", children: _jsxs(CardContent, { className: "p-4 text-center", children: [_jsx("div", { className: `${item.color} p-3 rounded-full text-white mx-auto mb-2 w-fit`, children: item.icon }), _jsx("p", { className: "text-white text-sm font-medium", children: item.label })] }) }) }) }, index))) })] })] })), activeSection === 'performance-badges' && (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, className: "space-y-8", children: [_jsxs("div", { children: [_jsxs("h2", { className: "text-2xl font-bold text-white mb-4 flex items-center gap-3", children: [_jsx(Trophy, { className: "w-6 h-6 text-orange-400" }), "Dynamic Performance Badges"] }), _jsx("p", { className: "text-gray-300 mb-6", children: "Visual performance tracking with energy levels and animated feedback based on user activity." })] }), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-6", children: [_jsx(EnergyPerformanceBadge, { energy: 95, performance: "excellent", animated: true }), _jsx(EnergyPerformanceBadge, { energy: 78, performance: "good", animated: true }), _jsx(EnergyPerformanceBadge, { energy: 54, performance: "average", animated: true }), _jsx(EnergyPerformanceBadge, { energy: 32, performance: "poor", animated: true })] }), _jsxs("div", { className: "mt-8", children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-4", children: "Badge Interactions" }), _jsxs("div", { className: "space-y-4", children: [_jsx(Button, { onClick: showFloatingBadge, className: "bg-orange-600 hover:bg-orange-700", children: "Show Achievement Badge" }), _jsx("p", { className: "text-gray-400 text-sm", children: "Performance badges adapt based on user metrics like win rate, betting accuracy, and activity level. They provide visual feedback and gamification elements." })] })] })] })), activeSection === 'onboarding-wizard' && (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, className: "space-y-8", children: [_jsxs("div", { children: [_jsxs("h2", { className: "text-2xl font-bold text-white mb-4 flex items-center gap-3", children: [_jsx(HelpCircle, { className: "w-6 h-6 text-blue-400" }), "Contextual Onboarding Wizard"] }), _jsx("p", { className: "text-gray-300 mb-6", children: "Interactive guided tours with contextual tooltips that adapt to user behavior and page content." })] }), _jsxs("div", { className: "space-y-6", children: [_jsx(Card, { className: "bg-gray-800/50 border-gray-700", "data-tour": "betting-overview", children: _jsxs(CardContent, { className: "p-6", children: [_jsx("h3", { className: "text-white font-semibold mb-2", children: "Betting Dashboard" }), _jsx("p", { className: "text-gray-300", children: "This is your main betting interface where you can view live odds and place bets." })] }) }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsx(Card, { className: "bg-gray-800/50 border-gray-700", "data-tour": "sports-list", children: _jsxs(CardContent, { className: "p-6", children: [_jsx("h3", { className: "text-white font-semibold mb-2", children: "Sports Selection" }), _jsx("div", { className: "space-y-2", children: ['Football', 'Basketball', 'Soccer', 'Tennis'].map((sport, index) => (_jsxs("div", { className: "flex items-center gap-2 p-2 bg-gray-700 rounded", children: [_jsx("div", { className: "w-2 h-2 bg-green-400 rounded-full" }), _jsx("span", { className: "text-white text-sm", children: sport })] }, index))) })] }) }), _jsx(Card, { className: "bg-gray-800/50 border-gray-700", "data-tour": "odds-display", children: _jsxs(CardContent, { className: "p-6", children: [_jsx("h3", { className: "text-white font-semibold mb-2", children: "Live Odds" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between items-center p-2 bg-gray-700 rounded", children: [_jsx("span", { className: "text-white text-sm", children: "Chiefs vs Bills" }), _jsx(Badge, { className: "bg-green-600", children: "1.85" })] }), _jsxs("div", { className: "flex justify-between items-center p-2 bg-gray-700 rounded", children: [_jsx("span", { className: "text-white text-sm", children: "Lakers vs Celtics" }), _jsx(Badge, { className: "bg-blue-600", children: "2.10" })] })] })] }) })] }), _jsx(Card, { className: "bg-gray-800/50 border-gray-700", "data-tour": "bet-slip", children: _jsxs(CardContent, { className: "p-6", children: [_jsx("h3", { className: "text-white font-semibold mb-2", children: "Bet Slip" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "p-3 bg-gray-700 rounded", children: [_jsx("p", { className: "text-white text-sm", children: "No active bets" }), _jsx("p", { className: "text-gray-400 text-xs", children: "Click on odds to add bets here" })] }), _jsx(Button, { className: "w-full bg-blue-600 hover:bg-blue-700", children: "Place Bet" })] })] }) })] }), _jsx("div", { className: "text-center", children: _jsx("p", { className: "text-gray-400 text-sm mb-4", children: "The onboarding wizard automatically detects page context and provides relevant guidance. It tracks user progress and adapts the experience accordingly." }) })] })), activeSection === 'personalized-themes' && (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, className: "space-y-8", children: [_jsxs("div", { children: [_jsxs("h2", { className: "text-2xl font-bold text-white mb-4 flex items-center gap-3", children: [_jsx(Palette, { className: "w-6 h-6 text-purple-400" }), "Personalized Dashboard Themes"] }), _jsx("p", { className: "text-gray-300 mb-6", children: "Customizable color schemes that adapt to user preferences and unlock with progression." })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsx(Card, { className: "bg-gray-800/50 border-gray-700", children: _jsxs(CardContent, { className: "p-6", children: [_jsx("h3", { className: "text-white font-semibold mb-4", children: "Theme Categories" }), _jsx("div", { className: "space-y-3", children: [
                                                                                    { name: 'Professional', color: 'bg-blue-600', personality: 'Business focused' },
                                                                                    { name: 'Energetic', color: 'bg-orange-600', personality: 'High activity' },
                                                                                    { name: 'Calm', color: 'bg-green-600', personality: 'Focused trading' },
                                                                                    { name: 'Luxurious', color: 'bg-purple-600', personality: 'VIP experience' },
                                                                                    { name: 'Gaming', color: 'bg-pink-600', personality: 'Gaming aesthetics' }
                                                                                ].map((theme, index) => (_jsxs("div", { className: "flex items-center gap-3 p-2 bg-gray-700 rounded", children: [_jsx("div", { className: `w-4 h-4 rounded-full ${theme.color}` }), _jsxs("div", { children: [_jsx("p", { className: "text-white text-sm font-medium", children: theme.name }), _jsx("p", { className: "text-gray-400 text-xs", children: theme.personality })] })] }, index))) })] }) }), _jsx(Card, { className: "bg-gray-800/50 border-gray-700", children: _jsxs(CardContent, { className: "p-6", children: [_jsx("h3", { className: "text-white font-semibold mb-4", children: "Unlock System" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-white text-sm", children: "Current Level" }), _jsx(Badge, { className: "bg-blue-600", children: "Level 15" })] }), _jsx("div", { className: "bg-gray-700 rounded-full h-2", children: _jsx("div", { className: "bg-gradient-to-r from-blue-500 to-purple-500 h-full rounded-full w-3/5" }) }), _jsx("p", { className: "text-gray-400 text-xs", children: "Complete trades and achievements to unlock premium themes" }), _jsx(Button, { onClick: () => setShowThemeCustomizer(true), className: "w-full bg-purple-600 hover:bg-purple-700", children: "Open Theme Customizer" })] })] }) })] }), _jsxs("div", { className: "bg-gradient-to-r from-purple-900/20 to-blue-900/20 border border-purple-500/30 rounded-lg p-6", children: [_jsx("h3", { className: "text-white font-semibold mb-2", children: "Theme Features" }), _jsxs("ul", { className: "text-gray-300 text-sm space-y-1", children: [_jsx("li", { children: "\u2022 Personality-based color schemes" }), _jsx("li", { children: "\u2022 Progressive unlock system" }), _jsx("li", { children: "\u2022 Real-time theme switching" }), _jsx("li", { children: "\u2022 User preference persistence" }), _jsx("li", { children: "\u2022 Adaptive interface elements" })] })] })] })), activeSection === 'activity-visualizer' && (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, className: "space-y-8", children: [_jsxs("div", { children: [_jsxs("h2", { className: "text-2xl font-bold text-white mb-4 flex items-center gap-3", children: [_jsx(Activity, { className: "w-6 h-6 text-green-400" }), "Real-Time Activity Visualizations"] }), _jsx("p", { className: "text-gray-300 mb-6", children: "Live activity feeds with animated metrics, event streams, and performance indicators." })] }), _jsx(RealTimeActivityVisualizer, {})] }))] }) }) }) })] }) }), _jsx(OnboardingWizard, {}), _jsx(ThemeCustomizer, { isOpen: showThemeCustomizer, onClose: () => setShowThemeCustomizer(false) }), _jsx(CelebrationEffect, { trigger: demoStates.celebrationTrigger }), _jsx(FloatingBadge, { show: demoStates.floatingBadgeShow, icon: _jsx(Award, { className: "w-5 h-5" }), label: "Achievement Unlocked!", color: "bg-gradient-to-r from-yellow-500 to-orange-500" })] }) }));
};
export default EnhancedInteractiveDemo;
